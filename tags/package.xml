<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Avil Page (Posts about package)</title><link>http://avilpage.com/</link><description></description><atom:link href="http://avilpage.com/tags/package.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 30 Jun 2020 13:49:04 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How To Make Better Use Of Any Emacs Package?</title><link>http://avilpage.com/2015/03/how-to-make-better-use-of-any-emacs.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div id="preview" preview=""&gt;&lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;Elpy&lt;/a&gt; is an Emacs package that brings powerful Python editing to Emacs. While going through elpy issues, I came across an interesting thread, where someone asked this&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-urQHNeVridQ/VPs1WMpjxTI/AAAAAAAANqc/QKVwPB_6ot0/s1600/elpy-emacs.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://4.bp.blogspot.com/-urQHNeVridQ/VPs1WMpjxTI/AAAAAAAANqc/QKVwPB_6ot0/s1600/elpy-emacs.png" height="336" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;This lead to this post. This post gives a brief introduction on getting familiar with any Emacs package &amp;amp; start hacking it quickly.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h3 id="getting-started-"&gt;GETTING STARTED:&lt;/h3&gt;Most Emacs packages provide a Readme file &amp;amp; some of them have good documentation too. Also there is emacswiki where some other hacks will be available.&lt;br&gt;&lt;br&gt;That will be help You to get started with any package. You can start using default functions/key bindings.&lt;br&gt;&lt;br&gt;If we take elpy as a case study, it has &lt;a href="https://github.com/jorgenschaefer/elpy/blob/master/README.rst" target="_blank"&gt;Readme file&lt;/a&gt; which shows how to install elpy. It also has a &lt;a href="http://elpy.readthedocs.org/en/latest/index.html" target="_blank"&gt;good documentation&lt;/a&gt; about elpy &amp;amp; some of its important features.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h3 id="getting-under-the-hood-"&gt;GETTING UNDER THE HOOD:&lt;/h3&gt;Now lets see some interesting stuff which Emacs packages are capable of but read me file or documentation wont contain.&lt;br&gt;&lt;br&gt;One useful package I recommend for this purpose is &lt;a href="https://github.com/emacs-helm/helm-descbinds" target="_blank"&gt;helm-descbindings&lt;/a&gt; which shows key bindings of all available modes. You can also filter among them.&lt;br&gt;&lt;br&gt;Here You will come to know about few useful functions an Emacs package is capable of doing.&lt;br&gt;&lt;br&gt;In the case of elpy, You can see something like this.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-k0GV9-BtdmQ/VPs3oFuqdEI/AAAAAAAANqo/sEu3kFCeDFU/s1600/elpy-emacs2.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-k0GV9-BtdmQ/VPs3oFuqdEI/AAAAAAAANqo/sEu3kFCeDFU/s1600/elpy-emacs2.png" height="516" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;But You cannot find all key bindings here as some of them might be shadowed (or taken away) by other packages.&lt;br&gt;&lt;br&gt;To specify a key binding, Emacs packages use a define-key function. So if You open source code of the package and search for define-key, you will see all key bindings there.&lt;br&gt;&lt;br&gt;If you search for define-key in elpy.el You will come across this&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-kbACCkJmxIg/VPs6x97q2XI/AAAAAAAANq0/1Aa_TIcbjU0/s1600/elpy-emacs21.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-kbACCkJmxIg/VPs6x97q2XI/AAAAAAAANq0/1Aa_TIcbjU0/s1600/elpy-emacs21.png" height="640" width="632"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;Now You know a few functions &amp;amp; their key bindings which are not present in the documentation.&lt;br&gt;&lt;br&gt;If there are any key bindings that are not useful You can unbind them.&lt;br&gt;For example elpy has "C-c C-p" binded to (elpy-flymake-previous-error) which I won't use much. So I can unbind it&lt;br&gt;&lt;br&gt;&lt;pre&gt;&lt;code&gt;    (&lt;span class="hljs-keyword"&gt;define-key&lt;/span&gt; elpy-mode-map &lt;span class="hljs-list"&gt;(&lt;span class="hljs-keyword"&gt;kbd&lt;/span&gt; &lt;span class="hljs-string"&gt;"C-c C-p"&lt;/span&gt;)&lt;/span&gt; &lt;span class="hljs-literal"&gt;nil&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;This sets "C-c C-p" to nil.&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="digging-deeper-"&gt;DIGGING DEEPER:&lt;/h3&gt;So far we have seen what an Emacs package is capable of doing. Now, lets start tweaking it a little bit.&lt;br&gt;&lt;br&gt;The first thing You can do is start using interactive functions right away. Functions in Emacs package which has interactive form are callable commands. You can invoke them using M-x and function name. You will find a lot of them here.&lt;br&gt;&lt;br&gt;If you want to find all interactive commands in an emacs package, You have to search through source code &amp;amp; find them. Instead if you have &lt;a href="https://github.com/emacs-helm/helm" target="_blank"&gt;helm&lt;/a&gt; (If You are not using Helm, I highly recommend You to start using it.) installed, if you type M-x &amp;amp; few letters of the package name, it will narrow down all the interactive functions of that package.&lt;br&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Elpy has a lot of interactive commands, You can see a few of them here.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-QomW6hrTdnw/VPs8T7ifL1I/AAAAAAAANrA/XjSc8-zJRDI/s1600/elpy-emacs.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-QomW6hrTdnw/VPs8T7ifL1I/AAAAAAAANrA/XjSc8-zJRDI/s1600/elpy-emacs.png" height="640" width="376"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;Now You can start bindings keys to any of the functions that You like. Previously We have unbinded a key. Now lets bind it to some function.&lt;br&gt;&lt;br&gt;    (global-set-key (kbd "C-c C-p") 'elpy-set-project-root)&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;h3 id="digging-deeper-"&gt;GETTING (IN)SANE WITH LISP:&lt;/h3&gt;&lt;div&gt;So far we have just used Emacs package as it is. If You know a bit of lisp, You can start tweaking existing functions or You can write Your own functions. This mostly depends on how You want to use &amp;amp; customize a package. You can do a lot of fun stuff. Enjoy lisping :)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="http://www.avilpage.com/search/label/emacs" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;More articles about Emacs&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>elpy</category><category>emacs</category><category>package</category><category>python</category><guid>http://avilpage.com/2015/03/how-to-make-better-use-of-any-emacs.html</guid><pubDate>Sat, 07 Mar 2015 12:53:00 GMT</pubDate></item></channel></rss>