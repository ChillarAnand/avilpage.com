<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Avil Page (Posts about javascript)</title><link>https://avilpage.com/</link><description></description><atom:link href="https://avilpage.com/tags/javascript.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Mon, 24 Jun 2024 13:48:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Adding Fuzzy Search To Frappe Framework</title><link>https://avilpage.com/2022/03/fuzzy-search-frappe-framework.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;h4&gt;Introduction&lt;/h4&gt;
&lt;p&gt;As software developers, we use fuzzy search a lot especially when using Emacs or any other editors/IDEs. For example to search a file called &lt;code&gt;patient_history.js&lt;/code&gt;, in the editor, we can just type &lt;code&gt;pah&lt;/code&gt; and editor will narrow it down.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://avilpage.com/images/frappe-fuzzy-search-1.png"&gt;&lt;/p&gt;
&lt;p&gt;This is quite handy as we can open any file with just few characters.&lt;/p&gt;
&lt;p&gt;FF is a low code, open source, web framework in Python and Javascript. All sites built with FF will have a global search bar(aka awesome bar) as shown below. Here, we can search for doctypes, reports, pages etc.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://avilpage.com/images/frappe-fuzzy-search-2.png"&gt;&lt;/p&gt;
&lt;p&gt;To open &lt;code&gt;Patient History&lt;/code&gt;, we have to type almost the entire text in search bar. If we type &lt;code&gt;pah&lt;/code&gt; like we have typed in the editor, it won't show any results.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://avilpage.com/images/frappe-fuzzy-search-3.png"&gt;&lt;/p&gt;
&lt;p&gt;Instead, we can add fuzzy search here so that we can search for any item with just a frew key strokes.&lt;/p&gt;
&lt;h4&gt;Fuzzy Search&lt;/h4&gt;
&lt;p&gt;There are many third party packages which implement fuzzy search in programming languages. However we can't use any of these fuzzy search packages directly. These editors internally use a scoring algorithm to rank the results and display results based on score.&lt;/p&gt;
&lt;p&gt;It internally considers many factors mentioned below for scoring.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Matched letters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CamelCase letters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;snake_case letters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consecutive matching letters&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can come up with a scoring mechanism for these factors and based on the matches, we can rank the results. I have implemented a custom fuzzy search alogirthm based on the above factors but it was slow and results were not good in some cases.&lt;/p&gt;
&lt;p&gt;Then I stumbled up this &lt;a href="https://github.com/forrestthewoods/lib_fts/blob/master/code/fts_fuzzy_match.js"&gt;fts_fuzzy_match&lt;/a&gt; implementation. This is a reverse engineered implementation of sublime text fuzzy search and it has a detailed scoring mechanism as well. It assigns negative ranking to mismatched letters and bonus points for consecutive matches.&lt;/p&gt;
&lt;p&gt;This works well and is as effective as most IDEs search. Now that there is a solid fuzzy search, all we need to do is hook this up in FF.&lt;/p&gt;
&lt;p&gt;FF internally has a fuzzy search function and we can directly hook it up here as shown here.&lt;/p&gt;
&lt;p&gt;After that, we can search for anything in just few key strokes. For example to open patient history, we can just type &lt;code&gt;pah&lt;/code&gt; and it will show results like this.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://avilpage.com/images/frappe-fuzzy-search-4.png"&gt;&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Fuzzy search in editors/IDEs is quite handy and when we bring to other places like FF or any other search bar, it improves search experience a lot.&lt;/p&gt;</description><category>frappe-framework</category><category>javascript</category><guid>https://avilpage.com/2022/03/fuzzy-search-frappe-framework.html</guid><pubDate>Thu, 31 Mar 2022 16:00:33 GMT</pubDate></item><item><title>Switching Hosts With Bookmarklets - Web Development Tips</title><link>https://avilpage.com/2019/05/environment-bookmarklet-web-development-tips.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;p&gt;When debugging an issue related to web development projects, which is inconsistent between environments (local, development, QA, staging and production), we have to frequently switch between them.&lt;/p&gt;
&lt;p&gt;If we are debugging something on the home page, then we can just bookmark the host URLs. We can switch between them by clicking on the relevant bookmark. Some browsers provide autocompletion for bookmarks. So we can type a few characters and then select the relevant URL from suggestions.&lt;/p&gt;
&lt;p&gt;When debugging an issue on some other page like &lt;a href="https://avilpage.com/2019/05/environment-bookmarklet-web-development-tips.html"&gt;https://avilpage.com/validate/books/?name=darwin&amp;amp;year=2019&lt;/a&gt;, which has URL path and query param, switching between enviroment becomes tedious. To switch to local environment, we have to manually replace the hostname with localhost.&lt;/p&gt;
&lt;p&gt;To avoid this, we can use a bookmarklet to switch the hosts. A &lt;a href="https://en.wikipedia.org/wiki/Bookmarklet"&gt;bookmarklet&lt;/a&gt; is a bookmark which contains a JavaScript code snippet in its URL. This code snippet will be executed when the bookmarklet is clicked.&lt;/p&gt;
&lt;p&gt;Lets create a bookmarklet to replace host in the URL with &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;. Create new bookmark called &lt;code&gt;To Local&lt;/code&gt; and in the URL add the following snippet.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"http://localhost:8000"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we click on &lt;code&gt;To Local&lt;/code&gt; bookmarklet, it will redirect the current active page to localhost URL.&lt;/p&gt;
&lt;p&gt;We can create one more bookmarklet to switch to production. Create a bookmarklet called &lt;code&gt;To Production&lt;/code&gt; and add the following snippet in the URL.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"http://avilpage.com"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can create similar bookmarklets to switch to other environments. Now, switching between environments on any page is as easy as clicking a button.&lt;/p&gt;</description><category>browser</category><category>javascript</category><guid>https://avilpage.com/2019/05/environment-bookmarklet-web-development-tips.html</guid><pubDate>Wed, 08 May 2019 15:40:52 GMT</pubDate></item></channel></rss>