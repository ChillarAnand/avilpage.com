<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Avil Page (Posts about usb)</title><link>https://avilpage.com/</link><description></description><atom:link href="https://avilpage.com/tags/usb.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 04 Nov 2022 14:06:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Detecting USB Events In Ubuntu With Python</title><link>https://avilpage.com/2016/09/detecting-device-events-in-ubuntu-with-python.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Udev"&gt;udev&lt;/a&gt; is responsible for managing devices on Linux. It provides &lt;code&gt;udevadm&lt;/code&gt;, a CLI utility to monitor and control devices.&lt;/p&gt;
&lt;p&gt;If we run &lt;code&gt;udevadm monitor&lt;/code&gt; on terminal and connect a USB drive or hard disk or a mobile via USB to your computer, it will show that kernel has detected the device and it will send a signal to udev about it.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;â†’ udevadm monitor
monitor will print the received events &lt;span class="k"&gt;for&lt;/span&gt;:
UDEV - the event which udev sends out after rule processing
KERNEL - the kernel uevent

KERNEL&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4336&lt;/span&gt;.899091&lt;span class="o"&gt;]&lt;/span&gt; add      /devices/pci0000:00/0000:00:14.0/usb1/1-2 &lt;span class="o"&gt;(&lt;/span&gt;usb&lt;span class="o"&gt;)&lt;/span&gt;
KERNEL&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4336&lt;/span&gt;.899774&lt;span class="o"&gt;]&lt;/span&gt; add      /devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2:1.0 &lt;span class="o"&gt;(&lt;/span&gt;usb&lt;span class="o"&gt;)&lt;/span&gt;
KERNEL&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4336&lt;/span&gt;.902553&lt;span class="o"&gt;]&lt;/span&gt; add      /devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2:1.1 &lt;span class="o"&gt;(&lt;/span&gt;usb&lt;span class="o"&gt;)&lt;/span&gt;
UDEV  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4336&lt;/span&gt;.911201&lt;span class="o"&gt;]&lt;/span&gt; add      /devices/pci0000:00/0000:00:14.0/usb1/1-2 &lt;span class="o"&gt;(&lt;/span&gt;usb&lt;span class="o"&gt;)&lt;/span&gt;
UDEV  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4336&lt;/span&gt;.936453&lt;span class="o"&gt;]&lt;/span&gt; add      /devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2:1.1 &lt;span class="o"&gt;(&lt;/span&gt;usb&lt;span class="o"&gt;)&lt;/span&gt;
UDEV  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4337&lt;/span&gt;.947174&lt;span class="o"&gt;]&lt;/span&gt; add      /devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2:1.0 &lt;span class="o"&gt;(&lt;/span&gt;usb&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/pyudev"&gt;Pyudev&lt;/a&gt;, a third party package provides python bindings for udev. It can be installed with &lt;code&gt;pip install pyudev&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With this we can create a simple monitor to detect USB events.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyudev&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyudev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;monitor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyudev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Monitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_netlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subsystem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'usb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;poll&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'add'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; connected'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="c1"&gt;# do something&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Save this to a file say monitor.py and run it with &lt;code&gt;python monitor.py&lt;/code&gt; and connect a mobile or pendrive and it will show something like this.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;Device&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/sys/devices/pci0000:00/0000:00:14.0/usb1/1-6/1-6:1.0'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; connected
Device&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/sys/devices/pci0000:00/0000:00:14.0/usb1/1-1/1-1:1.0'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; connected
&lt;/pre&gt;
&lt;p&gt;Here we are just detecting &lt;code&gt;add&lt;/code&gt; event. Similary we can detect other events like &lt;code&gt;delete&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is useful for automatically running shell scripts once the device gets plugged or unplugged.&lt;/p&gt;</description><category>linux</category><category>python</category><category>usb</category><guid>https://avilpage.com/2016/09/detecting-device-events-in-ubuntu-with-python.html</guid><pubDate>Fri, 02 Sep 2016 13:24:38 GMT</pubDate></item></channel></rss>