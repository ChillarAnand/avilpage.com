<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Avil Page (Posts about android)</title><link>http://avilpage.com/</link><description></description><atom:link href="http://avilpage.com/tags/android.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 22 Feb 2020 07:30:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Running Django Web Apps On Android Devices</title><link>http://avilpage.com/2018/02/deploy-django-web-app-android.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div&gt;&lt;p&gt;When deploying a django webapp to Linux servers, Nginx/Apache as server, PostgreSQL/MySQL as database are preferred. For this tutorial, we will be using django development server with SQLite database.&lt;/p&gt;
&lt;p&gt;First install &lt;a href="https://play.google.com/store/apps/details?id=berserker.android.apps.sshdroid"&gt;SSHDroid&lt;/a&gt; app on Android. It will start ssh server on port 2222. If android phone is rooted, we can run ssh on port 22.&lt;/p&gt;
&lt;p&gt;Now install &lt;a href="https://play.google.com/store/apps/details?id=org.qpython.qpy"&gt;QPython&lt;/a&gt;. This comes bundled with pip, which will install required python packages.&lt;/p&gt;
&lt;p&gt;Instead of installing these two apps, we can use &lt;a href="https://github.com/termux/termux-app/"&gt;Termux&lt;/a&gt;, &lt;a href="https://github.com/corbinlc/GNURootDebian"&gt;GNURoot Debian&lt;/a&gt; or some other app which provides Linux environment in Android. These apps will provide &lt;code&gt;apt&lt;/code&gt; package manager, which can install &lt;code&gt;python&lt;/code&gt; and &lt;code&gt;openssh-server&lt;/code&gt; packages.&lt;/p&gt;
&lt;p&gt;I have used &lt;a href="https://github.com/ChillarAnand/django-bookmarks"&gt;django-bookmarks&lt;/a&gt;, a simple CRUD app to test this setup. We can use rsync or adb shell to copy django project to android.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;rsync -razP django-bookmarks :&lt;span class="nv"&gt;$USER&lt;/span&gt;@&lt;span class="nv"&gt;$HOST&lt;/span&gt;:/data/local/
&lt;/pre&gt;


&lt;p&gt;Now ssh into android, install django and start django server.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ ssh -v &lt;span class="nv"&gt;$USER&lt;/span&gt;@&lt;span class="nv"&gt;$HOST&lt;/span&gt;
&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ python -m pip install django
$ &lt;span class="nb"&gt;cd&lt;/span&gt; /data/local/django-bookmarks
$ python manage.py runvserver
&lt;/pre&gt;


&lt;p&gt;This will start development server on port 8000. To share this webapp with others, we will expose it with &lt;a href="https://serveo.net/"&gt;serveo&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ ssh -R &lt;span class="m"&gt;80&lt;/span&gt;:localhost:8000 serveo.net

Forwarding HTTP traffic from https://incepro.serveo.net
Press g to start a GUI session and ctrl-c to quit.
&lt;/pre&gt;


&lt;p&gt;Now we can share our django app with anyone.&lt;/p&gt;
&lt;p&gt;I have used Moto G4 Plus phone to run this app. I have done a quick load test with Apache Bench.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;ab -k -c &lt;span class="m"&gt;50&lt;/span&gt; -n &lt;span class="m"&gt;1000&lt;/span&gt;  &lt;span class="se"&gt;\&lt;/span&gt;
-H &lt;span class="s2"&gt;"Accept-Encoding: gzip, deflate"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
http://incepro.serveo/list/
&lt;/pre&gt;


&lt;p&gt;It is able to server 15+ requests concurrently with an average response time of 800ms.&lt;/p&gt;
&lt;p&gt;We can write a simple shell script or ansible playbook to automate this deployment process and we can host a low traffic website on an android phone if required.&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>django</category><category>python</category><guid>http://avilpage.com/2018/02/deploy-django-web-app-android.html</guid><pubDate>Mon, 19 Feb 2018 12:10:56 GMT</pubDate></item><item><title>How To Install Custom ROMs In Xiamo MiPad?</title><link>http://avilpage.com/2017/11/how-to-install-custom-roms-in-mipad.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div&gt;&lt;p&gt;Mi Pad and other Xiamo devices has Mi UI OS which is a dual boot system. A major problem with this system is it has only ~600 MB of space in 1st partition. Because of this, we cannot install some custom ROMs as they need more space. In this article we will see how to merge both partitions to get more free space and install any custom ROM.&lt;/p&gt;
&lt;h3&gt;Install TWRP&lt;/h3&gt;
&lt;p&gt;Dowload latest recovery from &lt;a href="https://twrp.me/"&gt;twrp.me&lt;/a&gt;. Copy it to android device or push it to android using adb.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;adb push -p twrp-3.1.1-0-mocha.img /sdcard/
&lt;/pre&gt;


&lt;p&gt;Now put the device into fastboot mode by pressing &lt;strong&gt;Volume down&lt;/strong&gt; &amp;amp; &lt;strong&gt;Power&lt;/strong&gt; button simultanesouly when you switch it on. When in fastboot mode, flash the downloaded recovery file&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo fastboot flash recovery twrp-3.1.1-0-mocha.img
&lt;/pre&gt;


&lt;p&gt;Now we can go to recovery mode using adb.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;adb reboot recovery
&lt;/pre&gt;


&lt;h3&gt;Merge partitions&lt;/h3&gt;
&lt;p&gt;Before installing custom ROM, we need to merge partitions so that we will have enough space to install ROM. If you are familiar with &lt;a href="https://www.gnu.org/software/parted/"&gt;parted&lt;/a&gt; command, you can directly merge the partitions from terminal in TWRP recovery.&lt;/p&gt;
&lt;p&gt;There is also a script which you can flash to do the partition. You can read &lt;a href="http://en.miui.com/thread-118294-1-1.html"&gt;this guide&lt;/a&gt; on mi forum for more information.&lt;/p&gt;
&lt;p&gt;After partition is completed, from TWRP go to &lt;strong&gt;Wipe&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Advanced wipe&lt;/strong&gt; -&amp;gt; Select &lt;strong&gt;System&lt;/strong&gt; -&amp;gt; Click on &lt;strong&gt;Repair or change file system&lt;/strong&gt;. Here it should show that free space in system is more than 1GB.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/xiamo-mipad-custom-rom.jpg" width="600" height="400"&gt;
&lt;/p&gt;

&lt;h3&gt;Install ROM&lt;/h3&gt;
&lt;p&gt;After partitions are merged, it is straight forward to install any custom ROM. Download a custom ROM like lineage or RR, push it to device and then install it from TWRP. After reboot, you will see the custom ROM booting.&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>how-to</category><guid>http://avilpage.com/2017/11/how-to-install-custom-roms-in-mipad.html</guid><pubDate>Sun, 19 Nov 2017 10:39:27 GMT</pubDate></item><item><title>How To Remove Clock From LockScreen/StatusBar?</title><link>http://avilpage.com/2017/11/how-to-remove-clock-lock-screen-status-bar.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div&gt;&lt;p&gt;Last year, I wrote a blog post on &lt;a href="http://avilpage.com/2016/09/remove-clock-lock-screen-status-bar-android.html"&gt;how to remove clock from lock screen and status bar&lt;/a&gt; if &lt;a href="http://repo.xposed.info/module/de.robv.android.xposed.installer"&gt;xposed&lt;/a&gt; is installed on your android device. You can also do this without xposed if you are using RR(Resurrection Remix) as it comes with a lot of inbuilt customization.&lt;/p&gt;
&lt;h4&gt;Remove Clock From LockScreen&lt;/h4&gt;
&lt;p&gt;To remove clock from lockscreen, go to &lt;strong&gt;Settings&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Configurations&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Lock screen&lt;/strong&gt; -&amp;gt;  &lt;strong&gt;Show lock screen lock&lt;/strong&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_11.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_12.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_13.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;h4&gt;Remove Time From StatusBar&lt;/h4&gt;
&lt;p&gt;To remove clock from status bar, go to &lt;strong&gt;Settings&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Configurations&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Status bar&lt;/strong&gt; -&amp;gt;  &lt;strong&gt;System UI tuner&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Time&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Dont show this icon&lt;/strong&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_11.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_14.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_15.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p&gt;Once you do this, you will have a clean lockscreen and statusbar without any date or time them.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/remove_clock_android_16.png" height="400px" width="220"&gt;
&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>how-to</category><guid>http://avilpage.com/2017/11/how-to-remove-clock-lock-screen-status-bar.html</guid><pubDate>Mon, 13 Nov 2017 20:24:38 GMT</pubDate></item><item><title>Bluetooth Serial Communication Between Ubuntu &amp; Android</title><link>http://avilpage.com/2017/10/bluetooth-communication-between-ubuntu-android.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div&gt;&lt;p&gt;Most laptops and smart phones(Android/iPhone) have builtin Bluetooth modules. We can use this bluetooth module to communicate with each other or with other bluetooth modules like HC-05 or HM-10.&lt;/p&gt;
&lt;p&gt;In this article, we will learn how to send data between laptop and android bluetooth.&lt;/p&gt;
&lt;p&gt;First, we need to pair with a bluetooth device to send information. From Ubuntu, we can pair to a Bluetooth device from Bluetooth settings. Alternatively, we can also use CLI to do the same.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ bluetoothctl
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Controller &lt;span class="m"&gt;24&lt;/span&gt;:0A:64:D7:99:AC asus &lt;span class="o"&gt;[&lt;/span&gt;default&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;94&lt;/span&gt;:E9:79:BB:F8:3A DESKTOP-C4ECO3K
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;88&lt;/span&gt;:79:7E:7B:4C:87 athene
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;94&lt;/span&gt;:65:2D:8C:2E:10 OnePlus &lt;span class="m"&gt;5&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;98&lt;/span&gt;:0C:A5:61:D5:64 Lenovo VIBE K5 Plus
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Device AC:C3:3A:A0:CE:EF Galaxy J2
&lt;span class="o"&gt;[&lt;/span&gt;NEW&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;98&lt;/span&gt;:D3:35:71:02:B3 HC-05

&lt;span class="o"&gt;[&lt;/span&gt;bluetooth&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# power on&lt;/span&gt;
Changing power on succeeded

&lt;span class="o"&gt;[&lt;/span&gt;bluetooth&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# agent on&lt;/span&gt;
Agent registered

&lt;span class="o"&gt;[&lt;/span&gt;bluetooth&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# default-agent&lt;/span&gt;
Default agent request successful

&lt;span class="o"&gt;[&lt;/span&gt;bluetooth&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# scan on&lt;/span&gt;
Discovery started
&lt;span class="o"&gt;[&lt;/span&gt;CHG&lt;span class="o"&gt;]&lt;/span&gt; Controller &lt;span class="m"&gt;24&lt;/span&gt;:0A:64:D7:99:AC Discovering: yes
&lt;span class="o"&gt;[&lt;/span&gt;CHG&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;94&lt;/span&gt;:E9:79:BB:F8:3A RSSI: -88
&lt;span class="o"&gt;[&lt;/span&gt;CHG&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;88&lt;/span&gt;:79:7E:7B:4C:87 RSSI: -66

&lt;span class="o"&gt;[&lt;/span&gt;bluetooth&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# pair 88:79:7E:7B:4C:87&lt;/span&gt;
Attempting to pair with &lt;span class="m"&gt;88&lt;/span&gt;:79:7E:7B:4C:87
&lt;span class="o"&gt;[&lt;/span&gt;CHG&lt;span class="o"&gt;]&lt;/span&gt; Device &lt;span class="m"&gt;88&lt;/span&gt;:79:7E:7B:4C:87 Paired: yes
Pairing successful
&lt;/pre&gt;


&lt;p&gt;To communicate with paired devices, we will use &lt;a href="https://en.wikipedia.org/wiki/List_of_Bluetooth_protocols"&gt;RFCOMM protocol&lt;/a&gt;. RFCOMM is just a serial port emulation and provides reliable data tranfer like TCP.&lt;/p&gt;
&lt;p&gt;From ubuntu, lets open a port for communication.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ sudo rfcomm listen /dev/rfcomm0 &lt;span class="m"&gt;3&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;From Android, we have to connect to ubuntu. For this, we can use &lt;a href="https://play.google.com/store/apps/details?id=com.hardcodedjoy.roboremofree&amp;amp;hl=en"&gt;Roboremo&lt;/a&gt; app which supports RFCOMM.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ sudo rfcomm listen /dev/rfcomm0 &lt;span class="m"&gt;3&lt;/span&gt;
Waiting &lt;span class="k"&gt;for&lt;/span&gt; connection on channel &lt;span class="m"&gt;3&lt;/span&gt;
Connection from &lt;span class="m"&gt;88&lt;/span&gt;:79:7E:7B:4C:87 to /dev/rfcomm0
Press CTRL-C &lt;span class="k"&gt;for&lt;/span&gt; hangup
&lt;/pre&gt;


&lt;p&gt;Once the connection is established, we can communicate between devices.&lt;/p&gt;
&lt;p&gt;In Unix like systems, OS provides a device file as an interface for device driver. To send and read messages from Linux or Mac is as easy as reading and writing to a file.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# to send message to bluetooth&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'hello from ubuntu'&lt;/span&gt; &amp;gt; /dev/rfcomm0
&lt;/pre&gt;


&lt;p&gt;We can see the received messages on Android&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/images/arduino-ubuntu-bluetooth.jpg"&gt;
&lt;/p&gt;

&lt;p&gt;We can also send messages from android and read from ubuntu.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# to read messages from bluetooth&lt;/span&gt;
$ cat /dev/rfcomm0
hello from android
&lt;/pre&gt;


&lt;p&gt;This way, we can communicate with any bluetooth module using a laptop or a smart phone.&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>bluetooth</category><category>ubuntu</category><guid>http://avilpage.com/2017/10/bluetooth-communication-between-ubuntu-android.html</guid><pubDate>Tue, 03 Oct 2017 14:53:04 GMT</pubDate></item><item><title>Remove Clock From LockScreen/StatusBar On Android</title><link>http://avilpage.com/2016/09/remove-clock-lock-screen-status-bar-android.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div&gt;&lt;p&gt;I have been living without time from a few years and it is a bliss. I have removed time from my laptop. For android mobile, I couldn't find a reliable way to remove time and I used to change timezone to a random zone. With Xposed framework we can remove clock from lock screen and status bar.&lt;/p&gt;
&lt;p&gt;Before proceeding, make sure your phone is &lt;a href="http://www.xda-developers.com/root/"&gt;rooted&lt;/a&gt; and &lt;a href="http://repo.xposed.info/module/de.robv.android.xposed.installer"&gt;Xposed framework&lt;/a&gt; is installed.&lt;/p&gt;
&lt;h4&gt;Remove Clock From LockScreen&lt;/h4&gt;
&lt;p&gt;To remove clock from lockscreen, download &lt;a href="http://repo.xposed.info/module/com.ssrdroide.lockscreenwidgets"&gt;Lock screen widgets&lt;/a&gt; module and activate it.&lt;/p&gt;
&lt;p&gt;If you open it, it has an option to hide date and time.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_0.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;h4&gt;Remove Time From StatusBar&lt;/h4&gt;
&lt;p&gt;To remove clock from status bar, you have to install &lt;a href="http://repo.xposed.info/module/com.ceco.marshmallow.gravitybox"&gt;GravityBox&lt;/a&gt;. Open GravityBox and goto statusbar settings&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_3.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_4.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_5.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p&gt;If you are already using CyanogenMod, there is an option to hide time in settings.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_1.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_2.png" height="400px" width="220"&gt;
&lt;/p&gt;

&lt;p&gt;Once you do this, you will have a neat lockscreen without any time on it.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://avilpage.com/remove_clock_android/remove_clock_anrdoid_6.png" height="400px" width="220"&gt;
&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>how-to</category><guid>http://avilpage.com/2016/09/remove-clock-lock-screen-status-bar-android.html</guid><pubDate>Thu, 15 Sep 2016 13:24:38 GMT</pubDate></item></channel></rss>