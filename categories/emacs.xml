<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Avil Page (emacs)</title><link>http://www.avilpage.com</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://www.avilpage.com/categories/emacs.xml"></atom:link><language>en</language><lastBuildDate>Tue, 22 Nov 2016 15:25:34 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Emacs - Browsing Projects With Etags</title><link>http://www.avilpage.com/2016/04/emacs-browsing-projects-with-etags.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;A tag is a reference to a sub unit in a program. A tag references syntactic elements like functions, classes e.t.c. A tags table consists of list of tag names and their positions in corresponding files.&lt;/div&gt;&lt;h4 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.25em; line-height: 1.4; margin-bottom: 16px; margin-top: 1em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#creating-tags-table" id="user-content-creating-tags-table" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1.2; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Creating Tags Table&lt;/h4&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;A tags table can be generated by &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Create-Tags-Table.html" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;etags&lt;/a&gt; program. If you are using Ubuntu machine, you can install it with&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;sudo apt-get install exuberant-ctags&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Now, you can generate tags for a file with&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;etags input_file&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Depending on the project, we can also generate tags for a particular type. For example, we can generate tags for all python files using&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;find &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;.&lt;/span&gt; -name &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;*.py&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt; -exec etags -a {} &lt;span class="pl-cce" style="box-sizing: border-box;"&gt;\;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.25em; line-height: 1.4; margin-bottom: 16px; margin-top: 1em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#browsing-tags" id="user-content-browsing-tags" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1.2; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Browsing Tags&lt;/h4&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;This tag tables enables you to jump to definition of any tag. You can place cursor on a tag and press&lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;M-.&lt;/code&gt;(find-tag) which takes you to definition of that tag. If you want to go back to previous location, you can use &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;M-*&lt;/code&gt;(pop-tag -mark). There are &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Find-Tag.html#Find-Tag" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;several functions&lt;/a&gt; which help to navigate tags.&lt;/div&gt;&lt;h4 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.25em; line-height: 1.4; margin-bottom: 16px; margin-top: 1em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#tips" id="user-content-tips" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1.2; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Tips&lt;/h4&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="https://github.com/jixiuf/helm-etags-plus" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;ctags-update&lt;/a&gt; is a third party package which automatically updates TAGS file when new files are created.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;In addition to them, helm provides a function called &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;helm-semantic&lt;/code&gt; which shows all available tags in the current file. This works without TAGS file. Helm also has &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;helm-etags-select&lt;/code&gt; which provides helm interface to select tags.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;If you are working with a python projects, you can use &lt;a href="https://github.com/jorgenschaefer/elpy" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;elpy&lt;/a&gt; which navigates tags (using Jedi in the backend) without any TAGS file.&lt;/div&gt;&lt;h1 style="border-bottom-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-width: 1px; box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 2.25em; line-height: 1.2; margin: 1em 0px 16px; padding-bottom: 0.3em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#adding-attributes-to-django-forms" id="user-content-adding-attributes-to-django-forms" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;&lt;/h1&gt;&lt;/div&gt;</description><category>emacs</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2016/04/emacs-browsing-projects-with-etags.html</guid><pubDate>Sun, 17 Apr 2016 16:11:00 GMT</pubDate></item><item><title>Set Emacs As Default File Manager In Ubuntu!</title><link>http://www.avilpage.com/2015/09/set-emacs-as-default-file-manager-in.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;In this post, lets see how to do this&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-PTw-ItpGj98/VfBVVHE1WrI/AAAAAAAANzo/OkVM41veZgs/s1600/emacs-file-manager2.gif" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="358" src="http://1.bp.blogspot.com/-PTw-ItpGj98/VfBVVHE1WrI/AAAAAAAANzo/OkVM41veZgs/s640/emacs-file-manager2.gif" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;br&gt;I am using Ubuntu and it has nautilus as default file manager. You might need to use some other commands based on your OS.&lt;/div&gt;&lt;h3 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px; text-align: left;"&gt;File Manager:&lt;/h3&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;If you are in terminal, to open file manager, you need to run &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;nautilus&lt;/code&gt;. If you want to open file manager in specific folder, you can run &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;nautilus /foo/bar&lt;/code&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;When you have downloaded some files using browser, if you click &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;Show in folder&lt;/code&gt; in downloads page, it will open nautilus with that specific folder.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;We can also make Emacs to act as file manager in dired mode. If you run&lt;/div&gt;&lt;div class="highlight highlight-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ emacs -q --eval &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;(dired "~")&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;In terminal, emacs starts with a dired buffer for loggined user home directory.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Now lets write a small bash script to do the same thing.&lt;/div&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-stretch: normal; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-c" style="box-sizing: border-box;"&gt;&lt;span style="background-color: #fcfcf7;"&gt;&lt;span style="color: #222222; font-family: monospace, monospace;"&gt;&lt;span style="font-size: 14px; line-height: 20px;"&gt;#!/bin/bash&lt;br&gt; #!/usr/bin/bash&lt;br&gt; if [ $# -gt 0 ]; then&lt;br&gt;     dirname=$1&lt;br&gt; else&lt;br&gt;     dirname=$HOME&lt;br&gt; fi&lt;br&gt; emacsclient -c -eval "(dired \"$dirname\")" &amp;gt; /dev/null&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Save this file as &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;emacsfm&lt;/code&gt; in &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;/usr/local/bin&lt;/code&gt;. Now you can run &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;emacsfm&lt;/code&gt; in terminal which open home dired buffer or you can run &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;emacsfm /foo/bar&lt;/code&gt; which will open &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;/foo/bar&lt;/code&gt; dired buffer.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Now lets set, &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;emacsfm&lt;/code&gt; as default file manager. For that first we need to install &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;exo-utils&lt;/code&gt;.&lt;/div&gt;&lt;div class="highlight highlight-sh" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ sudo apt-get install exo-utils&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;and run it&lt;/div&gt;&lt;div class="highlight highlight-sh" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ exo-preferred-applications&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;It opens a new window like this.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Go to &lt;strong style="box-sizing: border-box;"&gt;Utilities&lt;/strong&gt; -&amp;gt; &lt;strong style="box-sizing: border-box;"&gt;File manager&lt;/strong&gt;, select &lt;strong style="box-sizing: border-box;"&gt;Other&lt;/strong&gt; and goto &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;/usr/local/bin&lt;/code&gt; and select &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;emacsfm&lt;/code&gt; from it.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px;"&gt;Now if you go to browser downloads and click on &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;show in folder&lt;/code&gt;, it will emacs dired.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px;"&gt;&lt;b&gt;References:&lt;/b&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box;"&gt;&lt;span style="color: #333333; font-family: Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif;"&gt;&lt;span style="line-height: 25.6px;"&gt;&lt;a href="https://help.ubuntu.com/community/DefaultFileManager"&gt;https://help.ubuntu.com/community/DefaultFileManager&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box;"&gt;&lt;span style="color: #333333; font-family: Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif;"&gt;&lt;span style="line-height: 25.6px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box;"&gt;&lt;br class="Apple-interchange-newline"&gt;&lt;span style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.8px; line-height: 20.16px;"&gt;&lt;a href="http://www.avilpage.com/search/label/emacs"&gt;More articles about Emacs&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>tech</category><guid>http://www.avilpage.com/2015/09/set-emacs-as-default-file-manager-in.html</guid><pubDate>Tue, 08 Sep 2015 18:12:00 GMT</pubDate></item><item><title>Automatically PEP8 &amp; Format Your Python Code!</title><link>http://www.avilpage.com/2015/05/automatically-pep8-your-python-code.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;&lt;script src="//cdnjs.cloudflare.com/ajax/libs/gist-embed/2.1/gist-embed.min.js" type="text/javascript"&gt;&lt;/script&gt;&lt;br&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;Even if you don't intend anybody else to read your code, there's still a very good chance that somebody will have to stare at your code and &lt;br&gt;figure out what it does: That person is probably going to be you, &lt;br&gt;twelve months from now&lt;span style="font-size: xx-small;"&gt;[1]&lt;/span&gt;.&lt;/pre&gt;&lt;/div&gt;or as Zen of Python says "Readability Counts".&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;PEP8 Style Guide:&lt;/h3&gt;Since code is read more than it is written, it is very important to make sure that the code is readable. Python has coding convetions(&lt;a href="https://www.python.org/dev/peps/pep-0008/" target="_blank"&gt;PEP8 style guide&lt;/a&gt;) to maintain consistency in code and thereby making it more readable.&lt;br&gt;&lt;br&gt;There are lot of tools (like &lt;a href="https://github.com/jcrocholl/pep8" target="_blank"&gt;pep8&lt;/a&gt;, &lt;a href="https://pypi.python.org/pypi/flake8" target="_blank"&gt;flake8&lt;/a&gt;, &lt;a href="http://www.pylint.org/" target="_blank"&gt;pylint&lt;/a&gt;) to check if Your code is in compliance with PEP8. Today most of the IDE/text editors have plugins which check for these errors and report it on the fly. If You are writing code from scratch, You can make sure that You are following coding conventions.&lt;br&gt;&lt;br&gt;However once in a while You have to read/bug-fix other people's code who don't follow these conventions(or You might even stumble across Your old piece of code). Once You are accustomed to style guide, it will be uneasy to read inconsistent code. Here is a badly formatted Python file opened in Emacs editor(with flymake &amp;amp; flake8 configured)&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-Kzv9OZt3MV0/VWC-mB4cjlI/AAAAAAAANvU/ZvHSC5aaAnw/s1600/auto-pep8.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="332" src="http://1.bp.blogspot.com/-Kzv9OZt3MV0/VWC-mB4cjlI/AAAAAAAANvU/ZvHSC5aaAnw/s640/auto-pep8.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Custom Style Guide:&lt;/h3&gt;If You don't like any of PEP8 rules, You can set Your own style guide for Your project. Most developers find limiting line length to 79 characters annoying. So they set their own line limit. You can even configure PEP8 checkers to take You own guidelines and check the code according to it.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Auto PEP8:&lt;/h3&gt;Formatting code to PEP8 style is boring &amp;amp; time consuming process. So instead of manually formatting code, You can use &lt;a href="https://pypi.python.org/pypi/autopep8/" target="_blank"&gt;autopep8&lt;/a&gt; package which automatically formats Python code to conform to the PEP 8 style guide.&lt;br&gt;&lt;br&gt;To install the package run&lt;br&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;$ &lt;span style="color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px;"&gt;pip install autopep8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;If You have a file foo.py as show above, You can run&lt;br&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;$ autopep8 --in-place --aggressive --aggressive foo.py&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;which neatly formats the file like this&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-wMseYjAAsp0/VWC-mHqkLkI/AAAAAAAANvY/hwOow-QGsxc/s1600/auto-pep8-2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="561" src="http://1.bp.blogspot.com/-wMseYjAAsp0/VWC-mHqkLkI/AAAAAAAANvY/hwOow-QGsxc/s640/auto-pep8-2.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Emacs Integration:&lt;/h3&gt;As emacs is extremely configurable editor, with just couple of lines of lisp, we can integrate autopep8 to emacs. Just find where autopep8 is installed; write a function which runs autopep8 on current buffer; bind a key to that function; set a hook, so that when ever You save a file, it will be automatically run the function.&lt;br&gt;&lt;br&gt;&lt;code data-gist-file="autopep8.el" data-gist-hide-footer="true" data-gist-hide-line-numbers="true" data-gist-id="0e8c8351799cdd7254d7"&gt;&lt;/code&gt;This works reasonably well. But I do recommend using &lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;Elpy&lt;/a&gt; for Python developemnt in emacs. I have just sent a &lt;a href="https://github.com/jorgenschaefer/elpy/pull/571" target="_blank"&gt;pull request to integrate&lt;/a&gt; autopep8 with elpy.&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Formatting:&lt;/h3&gt;&lt;div&gt;PEP8 formatters like autopep8, pep8ify will remove only lint errors. But they can't beautify code. &lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;little = more[3:   5]&lt;br&gt;&lt;br&gt;x = {'a': 37, 'b': 42,&lt;br&gt;     'c': 927}&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;Above code remains same after pep8ifying also. But the code doesn't look good yet. You can use formatters like &lt;a href="https://pypi.python.org/pypi/yapf" target="_blank"&gt;yapf&lt;/a&gt;, which will format the code even if the code is PEP8 compliant. &lt;/div&gt;&lt;div&gt;Above code will be formatted to &lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;little = more[3:5]&lt;br&gt;&lt;br&gt;x = {'a': 37, 'b': 42, 'c': 927}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;Some times this even destroys Your manual formatting. For example &lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;BAZ = {&lt;br&gt;    [1, 2, 3, 4],&lt;br&gt;    [5, 6, 7, 8],&lt;br&gt;    [9, 10, 11, 12]&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;will be converted to &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;BAZ = {[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;But You can tell it to ignore some parts.&lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;BAZ = {&lt;br&gt;    [1, 2, 3, 4],&lt;br&gt;    [5, 6, 7, 8],&lt;br&gt;    [9, 10, 11, 12]&lt;br&gt;}  # yapf: disable&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Beyond PEP8:&lt;/h3&gt;As we have learnt to auto PEP8 code, it is the time to look beyond PEP8. There is a good talk by Raymond Hettinger on that - &lt;a href="https://www.youtube.com/watch?v=wf-BqAjZb8M" target="_blank"&gt;Beyond PEP8&lt;/a&gt;, Best practices for beautiful intelligible code.&lt;br&gt;&lt;br&gt;Let Machines take care of PEP8 &amp;amp; Let Humans look Beyond PEP8.&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;References:&lt;/h3&gt;[1] &lt;a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/04/06/2036150.aspx" target="_blank"&gt;Code is read much more often than it is written, so plan accordingly&lt;/a&gt;.&lt;br&gt;&lt;a href="https://www.python.org/dev/peps/pep-0008/" target="_blank"&gt;Python - PEP8 style guide&lt;/a&gt;.&lt;br&gt;&lt;a href="https://pypi.python.org/pypi/autopep8/" target="_blank"&gt;Autopep8 - formats Python code to conform to the PEP 8.&lt;/a&gt;&lt;br&gt;&lt;a href="https://pypi.python.org/pypi/pep8ify" target="_blank"&gt;PEP8ify - modifies python source code to conform to PEP8.&lt;/a&gt;&lt;br&gt;&lt;div&gt;&lt;a href="https://pypi.python.org/pypi/yapf" target="_blank"&gt;yapf - A formatter for Python files.&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://www.youtube.com/watch?v=wf-BqAjZb8M" target="_blank"&gt;Beyond PEP8 - Best practices for beautiful intelligible code.&lt;/a&gt;&lt;/div&gt;&lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;Elpy, the Emacs Lisp Python Environment&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;!&lt;/span&gt;&lt;br&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/emacs" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Emacs&lt;/a&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;!&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>pep8</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2015/05/automatically-pep8-your-python-code.html</guid><pubDate>Sat, 23 May 2015 19:14:00 GMT</pubDate></item><item><title>How To Make Better Use Of Any Emacs Package?</title><link>http://www.avilpage.com/2015/03/how-to-make-better-use-of-any-emacs.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div id="preview" preview=""&gt;&lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;Elpy&lt;/a&gt; is an Emacs package that brings powerful Python editing to Emacs. While going through elpy issues, I came across an interesting thread, where someone asked this&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-urQHNeVridQ/VPs1WMpjxTI/AAAAAAAANqc/QKVwPB_6ot0/s1600/elpy-emacs.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://4.bp.blogspot.com/-urQHNeVridQ/VPs1WMpjxTI/AAAAAAAANqc/QKVwPB_6ot0/s1600/elpy-emacs.png" height="336" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;This lead to this post. This post gives a brief introduction on getting familiar with any Emacs package &amp;amp; start hacking it quickly.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h3 id="getting-started-"&gt;GETTING STARTED:&lt;/h3&gt;Most Emacs packages provide a Readme file &amp;amp; some of them have good documentation too. Also there is emacswiki where some other hacks will be available.&lt;br&gt;&lt;br&gt;That will be help You to get started with any package. You can start using default functions/key bindings.&lt;br&gt;&lt;br&gt;If we take elpy as a case study, it has &lt;a href="https://github.com/jorgenschaefer/elpy/blob/master/README.rst" target="_blank"&gt;Readme file&lt;/a&gt; which shows how to install elpy. It also has a &lt;a href="http://elpy.readthedocs.org/en/latest/index.html" target="_blank"&gt;good documentation&lt;/a&gt; about elpy &amp;amp; some of its important features.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h3 id="getting-under-the-hood-"&gt;GETTING UNDER THE HOOD:&lt;/h3&gt;Now lets see some interesting stuff which Emacs packages are capable of but read me file or documentation wont contain.&lt;br&gt;&lt;br&gt;One useful package I recommend for this purpose is &lt;a href="https://github.com/emacs-helm/helm-descbinds" target="_blank"&gt;helm-descbindings&lt;/a&gt; which shows key bindings of all available modes. You can also filter among them.&lt;br&gt;&lt;br&gt;Here You will come to know about few useful functions an Emacs package is capable of doing.&lt;br&gt;&lt;br&gt;In the case of elpy, You can see something like this.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-k0GV9-BtdmQ/VPs3oFuqdEI/AAAAAAAANqo/sEu3kFCeDFU/s1600/elpy-emacs2.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-k0GV9-BtdmQ/VPs3oFuqdEI/AAAAAAAANqo/sEu3kFCeDFU/s1600/elpy-emacs2.png" height="516" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;But You cannot find all key bindings here as some of them might be shadowed (or taken away) by other packages.&lt;br&gt;&lt;br&gt;To specify a key binding, Emacs packages use a define-key function. So if You open source code of the package and search for define-key, you will see all key bindings there.&lt;br&gt;&lt;br&gt;If you search for define-key in elpy.el You will come across this&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-kbACCkJmxIg/VPs6x97q2XI/AAAAAAAANq0/1Aa_TIcbjU0/s1600/elpy-emacs21.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-kbACCkJmxIg/VPs6x97q2XI/AAAAAAAANq0/1Aa_TIcbjU0/s1600/elpy-emacs21.png" height="640" width="632"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;Now You know a few functions &amp;amp; their key bindings which are not present in the documentation.&lt;br&gt;&lt;br&gt;If there are any key bindings that are not useful You can unbind them.&lt;br&gt;For example elpy has "C-c C-p" binded to (elpy-flymake-previous-error) which I won't use much. So I can unbind it&lt;br&gt;&lt;br&gt;&lt;pre&gt;&lt;code&gt;    (&lt;span class="hljs-keyword"&gt;define-key&lt;/span&gt; elpy-mode-map &lt;span class="hljs-list"&gt;(&lt;span class="hljs-keyword"&gt;kbd&lt;/span&gt; &lt;span class="hljs-string"&gt;"C-c C-p"&lt;/span&gt;)&lt;/span&gt; &lt;span class="hljs-literal"&gt;nil&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;This sets "C-c C-p" to nil.&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="digging-deeper-"&gt;DIGGING DEEPER:&lt;/h3&gt;So far we have seen what an Emacs package is capable of doing. Now, lets start tweaking it a little bit.&lt;br&gt;&lt;br&gt;The first thing You can do is start using interactive functions right away. Functions in Emacs package which has interactive form are callable commands. You can invoke them using M-x and function name. You will find a lot of them here.&lt;br&gt;&lt;br&gt;If you want to find all interactive commands in an emacs package, You have to search through source code &amp;amp; find them. Instead if you have &lt;a href="https://github.com/emacs-helm/helm" target="_blank"&gt;helm&lt;/a&gt; (If You are not using Helm, I highly recommend You to start using it.) installed, if you type M-x &amp;amp; few letters of the package name, it will narrow down all the interactive functions of that package.&lt;br&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Elpy has a lot of interactive commands, You can see a few of them here.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-QomW6hrTdnw/VPs8T7ifL1I/AAAAAAAANrA/XjSc8-zJRDI/s1600/elpy-emacs.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-QomW6hrTdnw/VPs8T7ifL1I/AAAAAAAANrA/XjSc8-zJRDI/s1600/elpy-emacs.png" height="640" width="376"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;Now You can start bindings keys to any of the functions that You like. Previously We have unbinded a key. Now lets bind it to some function.&lt;br&gt;&lt;br&gt;    (global-set-key (kbd "C-c C-p") 'elpy-set-project-root)&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;h3 id="digging-deeper-"&gt;GETTING (IN)SANE WITH LISP:&lt;/h3&gt;&lt;div&gt;So far we have just used Emacs package as it is. If You know a bit of lisp, You can start tweaking existing functions or You can write Your own functions. This mostly depends on how You want to use &amp;amp; customize a package. You can do a lot of fun stuff. Enjoy lisping :)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="http://www.avilpage.com/search/label/emacs" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;More articles about Emacs&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>elpy</category><category>emacs</category><category>package</category><category>python</category><guid>http://www.avilpage.com/2015/03/how-to-make-better-use-of-any-emacs.html</guid><pubDate>Sat, 07 Mar 2015 18:23:00 GMT</pubDate></item><item><title>BangPypers Talks - Emacs  As Python IDE!</title><link>http://www.avilpage.com/2015/02/bangpypers-talks-emacs-as-python-ide.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="http://bangalore.python.org.in/" target="_blank"&gt;BangPypers&lt;/a&gt; is the Bangalore Python Usergroup. It is one of the largest and oldest Python user groups in India. On 3rd Saturday of every month there will be meetup. This month(Feb 2014) took place at IBM, Domlur. I gave a talk about setting up Emacs as Python IDE.&lt;br&gt;&lt;br&gt;When  I started using Emacs, I spent a lot of time to configure &amp;amp; make it an IDE. Recently I came across &lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;elpy&lt;/a&gt;(emacs lisp python enviroment) &amp;amp;  liked it a lot. With just couple of lines You can turn emacs into Python IDE. So I stressed a lot about elpy during the talk.&lt;br&gt;&lt;br&gt;I talked about other important packages I used &amp;amp; other things that can be done with emacs.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href="http://bangalore.python.org.in/blog/2015/02/21/feb-meetup-report/"&gt;Meetup Report&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="http://chillaranand.github.io/emacs-py-ide/" target="_blank"&gt;Slides&lt;/a&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://github.com/ChillarAnand/.emacs.d" target="_blank"&gt;My .emacs.d&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description><category>bangpypers</category><category>chillaranand</category><category>emacs</category><category>meetup</category><category>python</category><category>talks</category><guid>http://www.avilpage.com/2015/02/bangpypers-talks-emacs-as-python-ide.html</guid><pubDate>Mon, 23 Feb 2015 20:32:00 GMT</pubDate></item><item><title>7 Easter Eggs Hiding In Your Emacs!</title><link>http://www.avilpage.com/2014/12/7-easter-eggs-hiding-in-your-emacs.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;I just came across this xkcd comic about Real programmers.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;a href="http://1.bp.blogspot.com/-wLJ6QY0kggY/VJ8RmRpdEvI/AAAAAAAANgc/DlofBpY-6Wo/s1600/real_programmers.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://1.bp.blogspot.com/-wLJ6QY0kggY/VJ8RmRpdEvI/AAAAAAAANgc/DlofBpY-6Wo/s1600/real_programmers.png" height="348" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;I started emacs invoked butterfly command and that's my first easter egg. Later I digged around and found several games &amp;amp; a few other easter eggs. Here are a few of them.&lt;br&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;pre style="border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(170, 204, 153); font-family: monospace, sans-serif; font-size: 15px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;M-x butterfly: Flip the desired bit on the drive platter.&lt;br&gt;&lt;br&gt;M-x doctor: Switch to *doctor* buffer and start giving psychotherapy.&lt;br&gt;&lt;br&gt;M-x zone: zone out completely.&lt;br&gt;&lt;br&gt;M-x life: runs Conway's "Life" cellular automaton.&lt;br&gt;&lt;br&gt;M-x studlify-buffer: stUdlIfY-RegioN stUdlIfY-CaSeS thE region.&lt;br&gt;&lt;br&gt;M-x landmark: Start or resume an Landmark game.&lt;br&gt;&lt;br&gt;M-x animate-birthday-present: Return a birthday present.&lt;br&gt;&lt;br&gt;M-x yow: Return or display a random Zippy quotation.&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;Notes:&lt;br&gt;1. yow was removed in Emacs 22 due to copyright problems. But you can get it manually.&lt;br&gt;&lt;br&gt;   Download quotes file to your .emacs.d directory&lt;br&gt;   M-! wget bit.ly/emacs-yow -O ~/.emacs.d/yow.txt.gz&lt;br&gt;&lt;br&gt;   Specify the path of file in Your init file&lt;br&gt;   (setq yow-file "~/.emacs.d/yow.txt.gz")&lt;br&gt;&lt;br&gt;2. To know about each of the easter eggs, you can use help&lt;br&gt;   C-h f RET &amp;lt;function&amp;gt; RET&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a href="http://www.avilpage.com/search/label/emacs"&gt;More articles about Emacs&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;</description><category>easter eggs</category><category>emacs</category><category>fun</category><category>geek</category><category>tech</category><guid>http://www.avilpage.com/2014/12/7-easter-eggs-hiding-in-your-emacs.html</guid><pubDate>Sat, 27 Dec 2014 20:29:00 GMT</pubDate></item><item><title>Generate Sphinx Friendly Docstrings For Python Functions In Emacs!</title><link>http://www.avilpage.com/2014/12/generate-sphinx-friendly-docstrings-for.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Today, I went to &lt;a href="http://www.meetup.com/Bangalore-Django-User-Group/events/219082263/" target="_blank"&gt;Django REST Framework Workshop&lt;/a&gt;. After the workshop is completed,  and we were discussing about Emacs, &lt;a href="http://www.kracekumar.com/" target="_blank"&gt;Krace&lt;/a&gt; showed this cool plugin &lt;a href="https://github.com/naiquevin/sphinx-doc.el" target="_blank"&gt;sphinx-doc&lt;/a&gt;, it inserts docstring skeleton for Python functions/methods as per the requirement of the Sphinx documentation generator.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-FHLnsul5mEg/VIxxkDO3ttI/AAAAAAAANeI/Q8xYC9S-MMg/s1600/emacs-python-sphinx.gif" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-FHLnsul5mEg/VIxxkDO3ttI/AAAAAAAANeI/Q8xYC9S-MMg/s1600/emacs-python-sphinx.gif" height="560" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Installation:&lt;/h3&gt;To install it from MELPA, run &lt;i&gt;"M-x package-list-packages"&lt;/i&gt;, search for &lt;i&gt;"sphinx-doc" , m&lt;/i&gt;ark it with i and press x to install.&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Configuration:&lt;/h3&gt;Add these lines to Your emacs config to enable sphinx-doc-mode.&lt;br&gt;&lt;pre style="border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(170, 204, 153); font-family: monospace, sans-serif; font-size: 15px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;(add-hook 'python-mode-hook (lambda ()&lt;br&gt;                  (require 'sphinx-doc)&lt;br&gt;                  (sphinx-doc-mode t)))&lt;/pre&gt;&lt;/div&gt;If you document your code(infact you should), this plugin saves quite a few strokes!  &lt;/div&gt;</description><category>django</category><category>emacs</category><category>emacs packages</category><category>plugins</category><category>productivity</category><category>python</category><category>sphinx</category><category>tech</category><guid>http://www.avilpage.com/2014/12/generate-sphinx-friendly-docstrings-for.html</guid><pubDate>Sat, 13 Dec 2014 17:29:00 GMT</pubDate></item><item><title>Use Space As Both Space &amp; Control - Avoid Emacs Pinky!</title><link>http://www.avilpage.com/2014/08/use-space-as-both-space-control-avoid.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Most of the  commands  in  Emacs start with  'Control'  &amp;amp;  'Meta'. Control key is present at the corners of the keyboard and its very uncomfortable to press it every-time to invoke a command. Most popular solution to this is to swap CAPS lock &amp;amp; CTRL key. But you have to press the key with Pinky which might cause &lt;a href="http://www.emacswiki.org/emacs/RepeatedStrainInjury" target="_blank"&gt;Emacs Pinky&lt;/a&gt;.&lt;br&gt;&lt;br&gt;A much better solution is to use space bar as control key. When you press the space bar, it will function as a normal space key. If you press it with any other key. it will function as control key. So, to run any commands, you can hold space with one thumb and press other key(s) with another hand which will be handy.&lt;br&gt;&lt;br&gt;In Linux, you can achieve this with &lt;a href="https://github.com/r0adrunner/Space2Ctrl" target="_blank"&gt;Space2Ctrl&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Install the dependencies, clone the repo, make and start the script.&lt;br&gt;&lt;div width="100px"&gt;&lt;pre class="literal-block" style="background-color: #e0e0ff; border-bottom-left-radius: 0.5em; border-bottom-right-radius: 0.5em; border-top-left-radius: 0.5em; border-top-right-radius: 0.5em; border: thin solid rgb(170, 170, 255); margin-left: 2em; margin-right: 2em; padding: 10px;"&gt;&lt;div style="font-family: 'Times New Roman'; font-size: medium; line-height: normal; white-space: normal;"&gt;&lt;br&gt;sudo apt-get install libx11-dev libxtst-dev&lt;br&gt;&lt;br&gt;&lt;span style="font-family: Times New Roman;"&gt;&lt;span style="white-space: normal;"&gt;git clone https://github.com/r0adrunner/Space2Ctrl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style="font-family: Times New Roman;"&gt;&lt;span style="white-space: normal;"&gt;cd Space2Ctrl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style="font-family: Times New Roman;"&gt;&lt;span style="white-space: normal;"&gt;make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style="font-family: Times New Roman;"&gt;&lt;span style="white-space: normal;"&gt;./s2cctl start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;Now you can use your space as space and control key.&lt;br&gt;&lt;br&gt;If you are using Mac checkout &lt;a href="http://pqrs.org/macosx/keyremap4macbook/index.html" target="_blank"&gt;KeyRemap4Macbook&lt;/a&gt; &amp;amp; for windows users there is &lt;a href="https://github.com/lydell/dual" target="_blank"&gt;Dual&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>emacs pinky</category><category>emacs tips</category><category>emacs tricks</category><category>moving control key</category><category>space2ctrl</category><category>space and control</category><category>tech</category><category>ubuntu</category><category>ubuntu key bindings</category><category>ubuntu tips &amp; tricks</category><guid>http://www.avilpage.com/2014/08/use-space-as-both-space-control-avoid.html</guid><pubDate>Fri, 29 Aug 2014 17:27:00 GMT</pubDate></item></channel></rss>