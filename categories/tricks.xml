<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Avil Page (Posts about tricks)</title><link>http://www.avilpage.com</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://www.avilpage.com/categories/tricks.xml"></atom:link><language>en</language><lastBuildDate>Sat, 11 Mar 2017 14:19:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Quickly Check If Your Django App Is Ready For Production!</title><link>http://www.avilpage.com/2014/12/django-check-app-ready-production.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Before deploying Your Django app, You need to make sure security, logging and other issues are taken care. Django provides a simple &lt;a href="https://docs.djangoproject.com/en/dev/howto/deployment/checklist/" target="_blank"&gt;deployment checklist&lt;/a&gt; which helps a lot. In &lt;a href="https://docs.djangoproject.com/en/dev/ref/django-admin/#django-admin-option---deploy" target="_blank"&gt;development version&lt;/a&gt; Django provides &lt;i&gt;--deploy &lt;/i&gt;option, which does some security checks. You can run it with&lt;br&gt;&lt;pre style="border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(170, 204, 153); font-family: monospace, sans-serif; font-size: 15px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;python manage.py check --deploy --settings=production_settings&lt;/pre&gt;&lt;div&gt;I have just created a new project and Django identified 6 security issues in it.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;pre style="border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(170, 204, 153); font-family: monospace, sans-serif; font-size: 15px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;→ python manage.py check --deploy                               &lt;br&gt;System check identified some issues:&lt;br&gt;WARNINGS:&lt;br&gt;?: (security.W001) You do not have 'django.middleware.security.SecurityMiddleware' in your MIDDLEWARE_CLASSES so the SECURE_HSTS_SECONDS, SECURE_CONTENT_TYPE_NOSNIFF, SECURE_BROWSER_XSS_FILTER, and SECURE_SSL_REDIRECT settings will have no effect.?: (security.W012) SESSION_COOKIE_SECURE is not set to True. Using a secure-only session cookie makes it more difficult for network traffic sniffers to hijack user sessions.&lt;br&gt;?: (security.W016) You have 'django.middleware.csrf.CsrfViewMiddleware' in your MIDDLEWARE_CLASSES, but you have not set CSRF_COOKIE_SECURE to True. Using a secure-only CSRF cookie makes it more difficult for network traffic sniffers to steal the CSRF token.&lt;br&gt;?: (security.W017) You have 'django.middleware.csrf.CsrfViewMiddleware' in your MIDDLEWARE_CLASSES, but you have not set CSRF_COOKIE_HTTPONLY to True. Using an HttpOnly CSRF cookie makes it more difficult for cross-site scripting attacks to steal the CSRF token.&lt;br&gt;?: (security.W018) You should not have DEBUG set to True in deployment.&lt;br&gt;?: (security.W019) You have 'django.middleware.clickjacking.XFrameOptionsMiddleware' in your MIDDLEWARE_CLASSES, but X_FRAME_OPTIONS is not set to 'DENY'. The default is 'SAMEORIGIN', but unless there is a good reason for your site to serve other parts of itself in a frame, you should change it to 'DENY'.&lt;br&gt;&lt;br&gt;System check identified 6 issues (0 silenced).&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;However this doesn't identify issues like absence of 404.html, 500.html templates, email setup, admin emails,  presence of print, pdb statements. There is a Django package called &lt;a href="https://github.com/agiliq/django-production-ready" target="_blank"&gt;django-production-ready&lt;/a&gt; which checks for these issues.&lt;br&gt;&lt;br&gt;To the new project just created, I have added a new file, which has a print &amp;amp; pdb statements. I have installed django-production ready, added &lt;i&gt;prodready &lt;/i&gt; to installed apps and ran &lt;i&gt;is_it_ready &lt;/i&gt;management command which produced a neat log of all issues.&lt;br&gt;&lt;pre style="border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(170, 204, 153); font-family: monospace, sans-serif; font-size: 15px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;→ python manage.py is_it_ready&lt;br&gt;--------------------&lt;br&gt;Production ready: No&lt;br&gt;--------------------&lt;br&gt;Possible errors:&lt;br&gt;    * Enter valid email address in ADMINS section&lt;br&gt;    * Enter valid email address in MANAGERS section&lt;br&gt;    * Template 404.html does not exist&lt;br&gt;    * Template 500.html does not exist&lt;br&gt;    * Setup E-mail host&lt;br&gt;    * Set a valid email for SERVER_EMAIL&lt;br&gt;    * Set a valid email for DEFAULT_FROM_EMAIL&lt;br&gt;    * You have one or more ipdb import  statements&lt;br&gt;    * You have one or more print statements&lt;br&gt;&lt;/pre&gt;&lt;div&gt;This comes in handy to quickly make sure a lot of issues are taken care and the app is ready for deployment!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>agiliq</category><category>deploy</category><category>django</category><category>productivity</category><category>python</category><category>tech</category><category>tips</category><category>tricks</category><guid>http://www.avilpage.com/2014/12/django-check-app-ready-production.html</guid><pubDate>Fri, 12 Dec 2014 13:54:00 GMT</pubDate></item></channel></rss>