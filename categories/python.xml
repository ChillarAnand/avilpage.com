<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Avil Page (python)</title><link>http://www.avilpage.com</link><description></description><atom:link rel="self" href="http://www.avilpage.com/categories/python.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 03 Aug 2016 13:45:38 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Concurrent Downloads - Bash (xargs, parallel) Vs Python (ThreadPoolExecutor)</title><link>http://www.avilpage.com/2016/05/concurrent-downloads-bash-vs-python/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;I just found one more free telugu book &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;Graded readings in modern literary Telugu&lt;/code&gt; by Golla Narayanaswami Reddy and Dan M Matson in &lt;a href="http://dsal.uchicago.edu/digbooks/dig_toc.html?BOOKID=PL4775.R4_1967" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;Digital South Asia Library&lt;/a&gt;.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Unfortunately they didn't provide it as an ebook but as a set of 221 tif images.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;I wrote a simple for loop in shell which downloaded all images one by one using &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;wget&lt;/code&gt;.&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ base_url=&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;"&lt;/span&gt;http://dsal.uchicago.edu&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;br&gt;$ url=&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;"&lt;/span&gt;&lt;span class="pl-smi" style="box-sizing: border-box; color: #333333;"&gt;$base_url&lt;/span&gt;/digbooks/images/PL4775.R4_1967/PL4775.R4_1967_%03g.gif&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;br&gt;$ &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;time&lt;/span&gt; -p sh -c &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;for i in $(seq -f $url 1 221); do; wget $i; done;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;I took 375 seconds for that. This was too slow. So I tried to download them parallelly using xargs.&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;time&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;echo&lt;/span&gt; &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;$(&lt;/span&gt;seq -f &lt;span class="pl-smi" style="box-sizing: border-box; color: #333333;"&gt;$url&lt;/span&gt; 1 221&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;|&lt;/span&gt; xargs -n 1 -P 36 wget&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;My laptop has a quad core processor. So I tried with 20, 24, 28, 32 process at a time.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;With &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;wget+xargs&lt;/code&gt;, the best timing is 13 seconds (CPU: 15%, Process: 28).&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Again I tried downloading them parallelly but with GNU parallel.&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;time&lt;/span&gt; seq -f &lt;span class="pl-smi" style="box-sizing: border-box;"&gt;$url&lt;/span&gt; 1 221 &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;|&lt;/span&gt; parallel -j36 wget {}&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;With &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;wget+parallel&lt;/code&gt;, the best timing is 12 seconds (CPU: 48%, Process: 24).&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Here is cpu consumption and time taken at each step.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4463796/15634659/08965d50-25e7-11e6-9f3e-02fe008997a1.png" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;" target="_blank"&gt;&lt;img alt="paralle_python_bash2" src="https://cloud.githubusercontent.com/assets/4463796/15634659/08965d50-25e7-11e6-9f3e-02fe008997a1.png" style="border: 0px; box-sizing: border-box; max-width: 100%;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Once I have done with bash, I decided to try the same things with Python and see how it goes.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;I wrote a simple script using requests to download images.&lt;/div&gt;&lt;div class="highlight highlight-source-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; shutil&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; sys&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;from&lt;/span&gt; concurrent &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; futures&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; requests&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;def&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;download_image&lt;/span&gt;(&lt;span class="pl-smi" style="box-sizing: border-box;"&gt;url&lt;/span&gt;):&lt;br&gt;    r &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; requests.get(url)&lt;br&gt;    file_name &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; url.split(&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;/&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;-&lt;/span&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1&lt;/span&gt;]&lt;br&gt;    &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;with&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;open&lt;/span&gt;(file_name, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;wb&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;as&lt;/span&gt; fh:&lt;br&gt;        fh.write(r.content)&lt;br&gt;&lt;br&gt;&lt;br&gt;base_url &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;http://dsal.uchicago.edu&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;br&gt;book_url &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; base_url &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;+&lt;/span&gt; &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;/digbooks/images/PL4775.R4_1967/PL4775.R4_1967_&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;{}&lt;/span&gt;.gif&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;br&gt;urls &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; [book_url.format(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;str&lt;/span&gt;(i).zfill(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;3&lt;/span&gt;)) &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;for&lt;/span&gt; i &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;in&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;range&lt;/span&gt;(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1&lt;/span&gt;, &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;221&lt;/span&gt;)]&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;def&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;download_serially&lt;/span&gt;():&lt;br&gt;    &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;for&lt;/span&gt; url &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;in&lt;/span&gt; urls:&lt;br&gt;        download_image(url)&lt;br&gt;&lt;br&gt;download_serially()&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;This took 244 seconds.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;To download images parallelly, I have used &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;Threadpoolexecutor&lt;/code&gt; from &lt;a href="https://docs.python.org/3.5/library/concurrent.futures.html" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;concurrent module&lt;/a&gt;.&lt;/div&gt;&lt;div class="highlight highlight-source-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;def&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;download_parallely&lt;/span&gt;():&lt;br&gt;    workers &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;int&lt;/span&gt;(sys.argv[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1&lt;/span&gt;])&lt;br&gt;&lt;br&gt;    &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;with&lt;/span&gt; futures.ThreadPoolExecutor(&lt;span class="pl-v" style="box-sizing: border-box; color: #ed6a43;"&gt;max_workers&lt;/span&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt;workers) &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;as&lt;/span&gt; executor:&lt;br&gt;        result &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; executor.map(download_image, urls)&lt;br&gt;&lt;br&gt;download_parallely()&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;I used previous script but just added one more function which queues tasks. Then I have executed the script with several options.&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;$ &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;time&lt;/span&gt; python down.py 28&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Threadpoolexecutor documentation uses 5 times number of processors as max_workers by default. I tried same options which I have used for bash. Here is the overall comparision.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;With &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;requests+ThreadPoolExecutor&lt;/code&gt;, the best timing is 12 seconds (CPU: 36%, Process: 28).&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Here is the overall comparision.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4463796/15634653/edadbb50-25e6-11e6-8f59-c908ca7d65b2.png" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;" target="_blank"&gt;&lt;img alt="paralle_python_bash" src="https://cloud.githubusercontent.com/assets/4463796/15634653/edadbb50-25e6-11e6-8f59-c908ca7d65b2.png" style="border: 0px; box-sizing: border-box; max-width: 100%;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;span style="line-height: 25.6px;"&gt;For a simple concurrent download, xargs+wget seems to be the best option.&lt;/span&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;span style="line-height: 25.6px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;span style="background-color: white; line-height: 25.6px;"&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; cursor: pointer; line-height: 25.6px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style="background-color: white; line-height: 25.6px;"&gt;.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>tech</category><category>ubuntu</category><guid>http://www.avilpage.com/2016/05/concurrent-downloads-bash-vs-python/</guid><pubDate>Sun, 29 May 2016 17:25:00 GMT</pubDate></item><item><title>Emacs - Browsing Projects With Etags</title><link>http://www.avilpage.com/2016/04/emacs-browsing-projects-with-etags/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;A tag is a reference to a sub unit in a program. A tag references syntactic elements like functions, classes e.t.c. A tags table consists of list of tag names and their positions in corresponding files.&lt;/div&gt;&lt;h4 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.25em; line-height: 1.4; margin-bottom: 16px; margin-top: 1em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#creating-tags-table" id="user-content-creating-tags-table" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1.2; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Creating Tags Table&lt;/h4&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;A tags table can be generated by &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Create-Tags-Table.html" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;etags&lt;/a&gt; program. If you are using Ubuntu machine, you can install it with&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;sudo apt-get install exuberant-ctags&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Now, you can generate tags for a file with&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;etags input_file&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Depending on the project, we can also generate tags for a particular type. For example, we can generate tags for all python files using&lt;/div&gt;&lt;div class="highlight highlight-source-shell" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;find &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;.&lt;/span&gt; -name &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;*.py&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt; -exec etags -a {} &lt;span class="pl-cce" style="box-sizing: border-box;"&gt;\;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.25em; line-height: 1.4; margin-bottom: 16px; margin-top: 1em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#browsing-tags" id="user-content-browsing-tags" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1.2; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Browsing Tags&lt;/h4&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;This tag tables enables you to jump to definition of any tag. You can place cursor on a tag and press&lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;M-.&lt;/code&gt;(find-tag) which takes you to definition of that tag. If you want to go back to previous location, you can use &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;M-*&lt;/code&gt;(pop-tag -mark). There are &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Find-Tag.html#Find-Tag" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;several functions&lt;/a&gt; which help to navigate tags.&lt;/div&gt;&lt;h4 style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.25em; line-height: 1.4; margin-bottom: 16px; margin-top: 1em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#tips" id="user-content-tips" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1.2; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Tips&lt;/h4&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="https://github.com/jixiuf/helm-etags-plus" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;ctags-update&lt;/a&gt; is a third party package which automatically updates TAGS file when new files are created.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;In addition to them, helm provides a function called &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;helm-semantic&lt;/code&gt; which shows all available tags in the current file. This works without TAGS file. Helm also has &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;helm-etags-select&lt;/code&gt; which provides helm interface to select tags.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;If you are working with a python projects, you can use &lt;a href="https://github.com/jorgenschaefer/elpy" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;elpy&lt;/a&gt; which navigates tags (using Jedi in the backend) without any TAGS file.&lt;/div&gt;&lt;h1 style="border-bottom-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-width: 1px; box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 2.25em; line-height: 1.2; margin: 1em 0px 16px; padding-bottom: 0.3em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#adding-attributes-to-django-forms" id="user-content-adding-attributes-to-django-forms" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;&lt;/h1&gt;&lt;/div&gt;</description><category>emacs</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2016/04/emacs-browsing-projects-with-etags/</guid><pubDate>Sun, 17 Apr 2016 16:11:00 GMT</pubDate></item><item><title>[Django Tips] Make Deleting Easy In Admin!</title><link>http://www.avilpage.com/2016/03/django-tips-make-deleting-easy-in-admin/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Lets say we have a model as shown in some project.&lt;/div&gt;&lt;div class="highlight highlight-source-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;from&lt;/span&gt; django.db &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; models&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;class&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;Resource&lt;/span&gt;(&lt;span class="pl-e" style="box-sizing: border-box; color: #795da3;"&gt;models&lt;/span&gt;.&lt;span class="pl-e" style="box-sizing: border-box; color: #795da3;"&gt;Model&lt;/span&gt;):&lt;br&gt;    &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;"""&lt;/span&gt;&lt;br&gt;&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;    Model to hold resources for books.&lt;/span&gt;&lt;br&gt;&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;    &lt;span class="pl-pds" style="box-sizing: border-box;"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;br&gt;    book &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; models.ForeignKey(&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;Book&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;    book_type &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; models.IntegerField()&lt;br&gt;    url &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; models.URLField()&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;This model can be registered in admin as follows.&lt;/div&gt;&lt;div class="highlight highlight-source-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;from&lt;/span&gt; django.contrib &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; admin&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;from&lt;/span&gt; . &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; models&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;class&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;ResourceAdmin&lt;/span&gt;(&lt;span class="pl-e" style="box-sizing: border-box; color: #795da3;"&gt;admin&lt;/span&gt;.&lt;span class="pl-e" style="box-sizing: border-box; color: #795da3;"&gt;ModelAdmin&lt;/span&gt;):&lt;br&gt;    list_display &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; (&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;book&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;book_type&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;url&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;br&gt;admin.site.register(models.Resource, ResourceAdmin)&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;This will generate a nice admin interface to modify the data.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4463796/13577519/d6e3bb1e-e4b8-11e5-935b-41633883fed3.png" style="box-sizing: border-box; color: #4078c0; text-decoration: none;" target="_blank"&gt;&lt;img alt="django-admin-delete" src="https://cloud.githubusercontent.com/assets/4463796/13577519/d6e3bb1e-e4b8-11e5-935b-41633883fed3.png" style="border: 0px; box-sizing: border-box; max-width: 100%;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Now if we want to delete a record, we need to follow these steps.&lt;/div&gt;&lt;ul style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px; margin-top: 0px; padding: 0px 0px 0px 2em;"&gt;&lt;li style="box-sizing: border-box;"&gt;First, we have to select that record&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Next, we have to click on the action dropdown&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Next, we have to select &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;delete&lt;/code&gt; action&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;Next, we have to click &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;Go&lt;/code&gt; button.&lt;/li&gt;&lt;li style="box-sizing: border-box;"&gt;In the next page we have to confirm that we have to delete.&lt;/li&gt;&lt;/ul&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Just to delete a single record, we have to click 5 times. That's too many clicks for a single action.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;To simplify the process, we can have simple &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;delete&lt;/code&gt; button for the objects as shown. This can be achieved by writing a function which will insert delete button for every record.&lt;/div&gt;&lt;div class="highlight highlight-source-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;from&lt;/span&gt; django.contrib &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; admin&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;from&lt;/span&gt; . &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; models&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;class&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;ResourceAdmin&lt;/span&gt;(&lt;span class="pl-e" style="box-sizing: border-box; color: #795da3;"&gt;admin&lt;/span&gt;.&lt;span class="pl-e" style="box-sizing: border-box; color: #795da3;"&gt;ModelAdmin&lt;/span&gt;):&lt;br&gt;    &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;def&lt;/span&gt; &lt;span class="pl-en" style="box-sizing: border-box; color: #795da3;"&gt;delete&lt;/span&gt;(&lt;span class="pl-smi" style="box-sizing: border-box;"&gt;self&lt;/span&gt;, &lt;span class="pl-smi" style="box-sizing: border-box;"&gt;obj&lt;/span&gt;):&lt;br&gt;        &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;return&lt;/span&gt; &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&amp;lt;input type="button" value="Delete" onclick="location.href=&lt;span class="pl-cce" style="box-sizing: border-box;"&gt;\'&lt;/span&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;%s&lt;/span&gt;/delete/&lt;span class="pl-cce" style="box-sizing: border-box;"&gt;\'&lt;/span&gt;" /&amp;gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;.format(obj.pk)&lt;br&gt;&lt;br&gt;    delete.allow_tags &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;True&lt;/span&gt;&lt;br&gt;    delete.short_description &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;Delete object&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;    list_display &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; (&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;book&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;,  &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;book_type&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;url&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;delete&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;br&gt;admin.site.register(models.Book)&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Now we have an admin with delete button for the records.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4463796/13577518/d6de98fa-e4b8-11e5-9303-7f88ec929464.png" style="box-sizing: border-box; color: #4078c0; outline: 0px;" target="_blank"&gt;&lt;img alt="django-admin-delete" src="https://cloud.githubusercontent.com/assets/4463796/13577518/d6de98fa-e4b8-11e5-9303-7f88ec929464.png" style="border: 0px; box-sizing: border-box; max-width: 100%;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;To delete an object, just click on &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;delete&lt;/code&gt; button and then confirm to delete it. Now, we are deleting objects with just 2 clicks.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;br&gt;Read more &lt;a href="http://www.avilpage.com/search/label/django%20tips" target=""&gt;django tips&lt;/a&gt;.&lt;br&gt;Read more &lt;a href="http://www.avilpage.com/search/label/django"&gt;posts about django&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</description><category>django</category><category>django tips</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2016/03/django-tips-make-deleting-easy-in-admin/</guid><pubDate>Mon, 07 Mar 2016 17:38:00 GMT</pubDate></item><item><title>Automate Boring Stuff - Accepting Waitlist RSVPs</title><link>http://www.avilpage.com/2016/02/automate-boring-stuff-accepting/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;a href="http://www.meetup.com/" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;Meetup.com&lt;/a&gt; makes it easier to organize events. Before meetup you can specify how many people you can accomodate. Then you send mail to all people so that interested people can RSVP.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;If RSVP is full, people can join waitlist. So if somebody changes &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;RSVP&lt;/code&gt; to &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;No&lt;/code&gt;, we can accomodate people in waitlist.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;On the otherhand, if you find a place where you can accomodate more number than you have planned, you can accept all people in waitlist.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Unfortunately, there is no option in meetup for that. You have to accept people one by one which is a boring job if there are ~50 people in waitlist.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;This where Python comes to rescue. Python has an excellent package called &lt;a href="https://github.com/asweigart/pyautogui" style="box-sizing: border-box; color: #4078c0; cursor: pointer; text-decoration: none;"&gt;pyautogui&lt;/a&gt; which helps you to automate all boring tasks.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Here is the simple script I have used for this task.&lt;/div&gt;&lt;div class="highlight highlight-source-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; time&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;import&lt;/span&gt; pyautogui&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;print&lt;/span&gt;(&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;Goto meetup event page and place cursor...&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;time.sleep(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;5&lt;/span&gt;)&lt;br&gt;&lt;br&gt;x, y &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;=&lt;/span&gt; pyautogui.position()&lt;br&gt;&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;for&lt;/span&gt; i &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;in&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;range&lt;/span&gt;(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;100&lt;/span&gt;):&lt;br&gt;    pyautogui.click(x, y)&lt;br&gt;    time.sleep(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;The code is self explanatory. First we are importing &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;pyautogui&lt;/code&gt; and then wait for 5 seconds so that we can go to meetup page and point mouse correctly. Get the cursor position and start clicking on that position with a gap of 5 seconds. This gap is needed as meetup shows a notification once you accept  &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;RSVP&lt;/code&gt;.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;Pyautogui is an interesting package which makes your boring job easier.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;div style="box-sizing: border-box; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; line-height: 25.6px; margin-bottom: 16px;"&gt;&lt;strong style="box-sizing: border-box;"&gt;Update:&lt;/strong&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; line-height: 25.6px; margin-bottom: 16px;"&gt;Just found that increasing &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;Attendee limit&lt;/code&gt; auto changes RSVP of waitlist people to &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;"&gt;Yes&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.8px; line-height: 20.16px;'&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; cursor: pointer; font-family: 'trebuchet ms', trebuchet, verdana, sans-serif; font-size: 16.8px; line-height: 20.16px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.8px; line-height: 20.16px;'&gt;!&lt;/span&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#code-highlighting-in-blog-posts" id="user-content-code-highlighting-in-blog-posts" style="box-sizing: border-box; color: #4078c0; cursor: pointer; display: block; left: 0px; line-height: 1; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>tech</category><guid>http://www.avilpage.com/2016/02/automate-boring-stuff-accepting/</guid><pubDate>Mon, 01 Feb 2016 16:56:00 GMT</pubDate></item><item><title>PyCon India 2015 - First PyCon Experience!</title><link>http://www.avilpage.com/2015/10/pycon-india-2015-first-pycon-experience/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://in.pycon.org/2015/" target="_blank"&gt;PyCon India&lt;/a&gt; 2015 was my first PyCon as an attendee, speaker &amp;amp; volunteer.&lt;br&gt;&lt;br&gt;When I first heard about PyCon in BangPypers meetup, I thought PyCon India is just like a big meetup with a little bit of planning &amp;amp; preparation. But by the end of conference, I have realised that organising PyCon is a very very huge task. It needs a great deal of preparation, planning up things and dedicated volunteers who are interested and patient enough to spend lots of time to run it.&lt;br&gt;&lt;br&gt;Nicholas Tollervey was keynote speaker. He came to venue on October 1st(two days before conference) and helped volunteers with some tasks. He did the same on next day too. I was wondering whether he came for key note speaking or volunteering.&lt;br&gt;&lt;br&gt;I have been talking to many people on mailing lists, github and other channels. Finally I was able to meet &amp;amp; talk with many of them in person.&lt;br&gt;&lt;br&gt;I was not able to attend all sessions but many people said this&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-9VgVTNHxKdw/VhLOzxutSmI/AAAAAAAAN0U/UZO2IrVkYZI/s1600/pycon-india.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="152" src="http://2.bp.blogspot.com/-9VgVTNHxKdw/VhLOzxutSmI/AAAAAAAAN0U/UZO2IrVkYZI/s640/pycon-india.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;It was good to see some of 2nd &amp;amp; 3rd year B.Tech students, who were familiar with django &amp;amp; were contributing to many upstream packages. Some students were even using Emacs as their editor.&lt;br&gt;&lt;br&gt;Toddlers were also interested to attend PyCon&lt;br&gt;&lt;a href="http://2.bp.blogspot.com/-9qfufBcoa4Y/VhLO1qsFV3I/AAAAAAAAN0c/sHYWrL7h6kc/s1600/pycon-india2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img border="0" height="111" src="http://2.bp.blogspot.com/-9qfufBcoa4Y/VhLO1qsFV3I/AAAAAAAAN0c/sHYWrL7h6kc/s640/pycon-india2.png" width="640"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;I have planned to make Python logo mosaic with rubik cubes. I thought it will take ~10 hours to complete it. When I got there with cubes, Vignesh U, Apoorva, Ram Mohan, Sayan Chowday and many other volunteers came forward and completed it in an hour.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://2.bp.blogspot.com/-4g9ourILjdA/VhLO3T1XwwI/AAAAAAAAN0k/BJGcFDMALiQ/s1600/rubik-cube-python.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img border="0" height="546" src="http://2.bp.blogspot.com/-4g9ourILjdA/VhLO3T1XwwI/AAAAAAAAN0k/BJGcFDMALiQ/s640/rubik-cube-python.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;I was eagerly waiting for PyCon India from past few months. PyCon India was just like a cool breeze! Ah...!!&lt;br&gt;&lt;br&gt;&lt;b&gt;Update:&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;How the hell did I forget about swag kit marathon?&lt;br&gt;&lt;br&gt;Day before conference, we had to prepare swag kits for participants. I don't know whose idea it was to prepare it like this, that but it was brilliant and most fun part.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/Ejr6iqqCdhc/0.jpg" frameborder="0" height="350" src="https://www.youtube.com/embed/Ejr6iqqCdhc?feature=player_embedded" width="650"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>rubik cube mosaic</category><category>tech</category><guid>http://www.avilpage.com/2015/10/pycon-india-2015-first-pycon-experience/</guid><pubDate>Mon, 05 Oct 2015 19:33:00 GMT</pubDate></item><item><title>[Python] Functions, Methods &amp; Attributes!</title><link>http://www.avilpage.com/2015/09/python-functions-methods-attributes/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;First, lets take a look at functions &amp;amp; methods and then define attributes for them.&lt;/div&gt;&lt;h2 style="border-bottom-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-width: 1px; box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.75em; line-height: 1.225; margin-bottom: 16px; margin-top: 1em; padding-bottom: 0.3em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#functions-vs-methods" id="user-content-functions-vs-methods" style="box-sizing: border-box; color: #4078c0; display: block; left: 0px; line-height: 1; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Functions Vs Methods:&lt;/h2&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;2&lt;/span&gt;]: &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;def&lt;/span&gt; f():&lt;br&gt;   ...:     &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;pass&lt;/span&gt;&lt;br&gt;   ...: &lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;3&lt;/span&gt;]: &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;class&lt;/span&gt; C:&lt;br&gt;   ...:     &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;def&lt;/span&gt; m(&lt;span class="pl-v" style="box-sizing: border-box; color: #ed6a43;"&gt;self&lt;/span&gt;):&lt;br&gt;   ...:         &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;pass&lt;/span&gt;&lt;br&gt;   ...:&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;We have just defined a function and a class(with a method in it).&lt;/div&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;18&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;type&lt;/span&gt;(f)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;18&lt;/span&gt;]: function&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;19&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;type&lt;/span&gt;(C.m)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;19&lt;/span&gt;]: function&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;20&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;type&lt;/span&gt;(C().m)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;20&lt;/span&gt;]: method&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;21&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;set&lt;/span&gt;(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;dir&lt;/span&gt;(C().m)) &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;-&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;set&lt;/span&gt;(&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;dir&lt;/span&gt;(f))&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;21&lt;/span&gt;]: {&lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;__func__&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;__self__&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;As seen above, a function binded to an instance of a class is method and an unbound method is a just a function. Also a method has &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__self__&lt;/code&gt; and &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__func__&lt;/code&gt; attributes in addition attributes of a function.&lt;/div&gt;&lt;h2 style="border-bottom-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-width: 1px; box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 1.75em; line-height: 1.225; margin-bottom: 16px; margin-top: 1em; padding-bottom: 0.3em; position: relative;"&gt;&lt;a aria-hidden="true" class="anchor" href="http://localhost:6419/#attributes" id="user-content-attributes" style="box-sizing: border-box; color: #4078c0; display: block; left: 0px; line-height: 1; margin-left: -30px; padding-left: 30px; padding-right: 6px; position: absolute; text-decoration: none; top: 0px;"&gt;&lt;/a&gt;Attributes:&lt;/h2&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;Lets add some attributes to function &amp;amp; method and see how they work.&lt;/div&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;21&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;setattr&lt;/span&gt;(f, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1&lt;/span&gt;)&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;22&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;hasattr&lt;/span&gt;(f, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;22&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;True&lt;/span&gt;&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;24&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;getattr&lt;/span&gt;(f, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;24&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;We can do the same thing with unbound method(which is nothing but a function) also&lt;/div&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;31&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;setattr&lt;/span&gt;(C.m, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;2&lt;/span&gt;)&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;32&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;hasattr&lt;/span&gt;(C.m, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;32&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;True&lt;/span&gt;&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;33&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;getattr&lt;/span&gt;(C.m, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;33&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;But we cant do the same thing with bound methods.&lt;/div&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;34&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;setattr&lt;/span&gt;(C().m, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;3&lt;/span&gt;)&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;AttributeError&lt;/span&gt;                            Traceback (most recent call last)&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;&amp;lt;&lt;/span&gt;ipython&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;-&lt;/span&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;input&lt;/span&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;-&lt;/span&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;34&lt;/span&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;-&lt;/span&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1379e94&lt;/span&gt;f2f48&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;in&lt;/span&gt; &lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;&amp;gt;&lt;/span&gt;()&lt;br&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;----&lt;/span&gt;&lt;span class="pl-k" style="box-sizing: border-box; color: #a71d5d;"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;1&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;setattr&lt;/span&gt;(C().m, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;2&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;AttributeError&lt;/span&gt;: &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;method&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;object&lt;/span&gt; has no attribute &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;When users add attributes to a function, they are stored in its &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__dict__&lt;/code&gt; attribute.&lt;/div&gt;&lt;pre lang="python3" style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; line-height: inherit; margin: 0px; max-width: initial; overflow: initial; padding: 0px; word-break: normal; word-wrap: normal;"&gt;In [40]: f.__dict__&lt;br&gt;Out[40]: {'state': 1}&lt;br&gt;&lt;br&gt;In [49]: C.m.__dict__&lt;br&gt;Out[49]: {'state': 2}&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;As we have seen in the beginning, method objects just hold reference to its class(&lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__self__&lt;/code&gt;) and function(&lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__func__&lt;/code&gt;). But they don't have its own &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__dict__&lt;/code&gt; to hold custom attributes. So we cannot set custom attributes to instance methods.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;But we can get the function that is referenced by bound method and set attribute for it.&lt;/div&gt;&lt;div class="highlight highlight-python" style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;"&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;36&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;setattr&lt;/span&gt;(C().m.&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;__func__&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;3&lt;/span&gt;)&lt;br&gt;&lt;br&gt;In [&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;39&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;getattr&lt;/span&gt;(C().m.&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;__func__&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: #183691;"&gt;&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;state&lt;span class="pl-pds" style="box-sizing: border-box;"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;Out[&lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;39&lt;/span&gt;]: &lt;span class="pl-c1" style="box-sizing: border-box; color: #0086b3;"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;Also methods provide, special &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;__getattr__&lt;/code&gt; which forwards attribute access to function object. So, this will work&lt;/div&gt;&lt;pre lang="python3" style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; line-height: inherit; margin: 0px; max-width: initial; overflow: initial; padding: 0px; word-break: normal; word-wrap: normal;"&gt;In [52]: hasattr(C().m, 'state')&lt;br&gt;Out[52]: True&lt;br&gt;&lt;br&gt;In [53]: getattr(C().m, 'state')&lt;br&gt;Out[53]: 3&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;"&gt;So we can just set attributes to functions &amp;amp; unbound methods just like classes but we can't do it for bound methods.&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>tech</category><guid>http://www.avilpage.com/2015/09/python-functions-methods-attributes/</guid><pubDate>Tue, 01 Sep 2015 19:47:00 GMT</pubDate></item><item><title>[Django Tips] Use for ... empty in Django templates.</title><link>http://www.avilpage.com/2015/08/use-for-empty-in-django-templates/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;It is quite common to send a query set from a view to template, loop over it and display items in it. If no items are there, it is good if we display some message. For that we can do something like this.&lt;/div&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; line-height: inherit; margin: 0px; max-width: initial; overflow: initial; padding: 0px; word-break: normal; word-wrap: normal;"&gt;{% if books %}&lt;br&gt;  {% for book in books %}&lt;br&gt;    &amp;lt;li&amp;gt;{{ book }}&amp;lt;/li&amp;gt;&lt;br&gt;  {% endfor %}&lt;br&gt;{% else %}&lt;br&gt;  &amp;lt;li&amp;gt;Sorry, there are no books.&amp;lt;/li&amp;gt;&lt;br&gt;{% endif %}&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;Django &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;{% for %}&lt;/code&gt; tag takes an optional &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;{% empty %}&lt;/code&gt; clause which will be rendered when queryset is empty. So we can rewrite the above code as&lt;/div&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; line-height: inherit; margin: 0px; max-width: initial; overflow: initial; padding: 0px; word-break: normal; word-wrap: normal;"&gt;{% for book in books %}&lt;br&gt;  &amp;lt;li&amp;gt;{{ book }}&amp;lt;/li&amp;gt;&lt;br&gt;{% empty %}&lt;br&gt;  &amp;lt;li&amp;gt;Sorry, there are no books.&amp;lt;/li&amp;gt;&lt;br&gt;{% endfor %}&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;This code is much cleaner than previous one. I tried to profile both code blocks. The first block took 0.9ms and second block took 0.8ms which means it is 11% faster than previous code :)&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;Reference: &lt;a href="https://docs.djangoproject.com/en/1.8/ref/templates/builtins/#for-empty" style="box-sizing: border-box; color: #4078c0; text-decoration: none;"&gt;Django docs&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;!&lt;/span&gt;&lt;br&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/django" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Django&lt;/a&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;!&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</description><category>django</category><category>django tips</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2015/08/use-for-empty-in-django-templates/</guid><pubDate>Tue, 04 Aug 2015 17:46:00 GMT</pubDate></item><item><title>[Django Tips] Make Django Development Server Persistent.</title><link>http://www.avilpage.com/2015/07/django-tips-make-django-development/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;I use Emacs for writing Python code. I also use &lt;a href="https://github.com/ChillarAnand/real-auto-save" style="box-sizing: border-box; color: #4078c0; text-decoration: none;"&gt;real-auto-save&lt;/a&gt; to save my files after 10 seconds of inactivity.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;While coding, when I stop writing in the middle, after 10 seconds Emacs auto saves the file. Django recognizes this &amp;amp; reloads the development server.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;Once I complete writing code, I go to browser &amp;amp; refresh the page. Since the code I was writing was incomplete somewhere in the middle and had some errors, Django development server was stopped and page won't reload. Now I have to go back to terminal and restart the server and again go back to browser to refresh page.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;To overcome this, Django server must be made persistent. The easiest way to accomplish this is to use a &lt;a href="http://stackoverflow.com/questions/25199550/auto-restart-django-development-server-on-file-save-after-previous-error" style="box-sizing: border-box; color: #4078c0; text-decoration: none;"&gt;simple bash script as described here&lt;/a&gt;.&lt;/div&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; line-height: inherit; margin: 0px; max-width: initial; overflow: initial; padding: 0px; word-break: normal; word-wrap: normal;"&gt;$ while true; do python manage.py runserver; sleep 4; done&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;When Django development server stops, after 4 seconds it tries to start automatically and goes on forever.&lt;/div&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; margin-bottom: 16px;"&gt;Instead of typing that everytime, it better to write this as a shell script and put it in system path, so that it can be used in any project.&lt;/div&gt;&lt;pre style="background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;"&gt;&lt;code style="background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; line-height: inherit; margin: 0px; max-width: initial; overflow: initial; padding: 0px; word-break: normal; word-wrap: normal;"&gt;while true; do&lt;br&gt;  echo "Re-starting Django runserver"&lt;br&gt;  python manage.py runserver&lt;br&gt;  sleep 4&lt;br&gt;done&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="box-sizing: border-box; color: #333333; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;"&gt;Save this &amp;amp; make it executable(&lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;chmod +x&lt;/code&gt;), use it is ./filename.sh and to stop use &lt;code style="background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6000003814697px; margin: 0px; padding: 0.2em 0px;"&gt;Ctrl-c Ctrl-c&lt;/code&gt;.&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;!&lt;/span&gt;&lt;br&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/django" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Django&lt;/a&gt;&lt;span style='background-color: white; color: #666666; font-family: "trebuchet ms" , "trebuchet" , "verdana" , sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;'&gt;!&lt;/span&gt;&lt;/div&gt;</description><category>django</category><category>django tips</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2015/07/django-tips-make-django-development/</guid><pubDate>Mon, 20 Jul 2015 18:41:00 GMT</pubDate></item><item><title>Automatically PEP8 &amp; Format Your Python Code!</title><link>http://www.avilpage.com/2015/05/automatically-pep8-your-python-code/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;&lt;script src="//cdnjs.cloudflare.com/ajax/libs/gist-embed/2.1/gist-embed.min.js" type="text/javascript"&gt;&lt;/script&gt;&lt;br&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;Even if you don't intend anybody else to read your code, there's still a very good chance that somebody will have to stare at your code and &lt;br&gt;figure out what it does: That person is probably going to be you, &lt;br&gt;twelve months from now&lt;span style="font-size: xx-small;"&gt;[1]&lt;/span&gt;.&lt;/pre&gt;&lt;/div&gt;or as Zen of Python says "Readability Counts".&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;PEP8 Style Guide:&lt;/h3&gt;Since code is read more than it is written, it is very important to make sure that the code is readable. Python has coding convetions(&lt;a href="https://www.python.org/dev/peps/pep-0008/" target="_blank"&gt;PEP8 style guide&lt;/a&gt;) to maintain consistency in code and thereby making it more readable.&lt;br&gt;&lt;br&gt;There are lot of tools (like &lt;a href="https://github.com/jcrocholl/pep8" target="_blank"&gt;pep8&lt;/a&gt;, &lt;a href="https://pypi.python.org/pypi/flake8" target="_blank"&gt;flake8&lt;/a&gt;, &lt;a href="http://www.pylint.org/" target="_blank"&gt;pylint&lt;/a&gt;) to check if Your code is in compliance with PEP8. Today most of the IDE/text editors have plugins which check for these errors and report it on the fly. If You are writing code from scratch, You can make sure that You are following coding conventions.&lt;br&gt;&lt;br&gt;However once in a while You have to read/bug-fix other people's code who don't follow these conventions(or You might even stumble across Your old piece of code). Once You are accustomed to style guide, it will be uneasy to read inconsistent code. Here is a badly formatted Python file opened in Emacs editor(with flymake &amp;amp; flake8 configured)&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-Kzv9OZt3MV0/VWC-mB4cjlI/AAAAAAAANvU/ZvHSC5aaAnw/s1600/auto-pep8.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="332" src="http://1.bp.blogspot.com/-Kzv9OZt3MV0/VWC-mB4cjlI/AAAAAAAANvU/ZvHSC5aaAnw/s640/auto-pep8.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Custom Style Guide:&lt;/h3&gt;If You don't like any of PEP8 rules, You can set Your own style guide for Your project. Most developers find limiting line length to 79 characters annoying. So they set their own line limit. You can even configure PEP8 checkers to take You own guidelines and check the code according to it.&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Auto PEP8:&lt;/h3&gt;Formatting code to PEP8 style is boring &amp;amp; time consuming process. So instead of manually formatting code, You can use &lt;a href="https://pypi.python.org/pypi/autopep8/" target="_blank"&gt;autopep8&lt;/a&gt; package which automatically formats Python code to conform to the PEP 8 style guide.&lt;br&gt;&lt;br&gt;To install the package run&lt;br&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;$ &lt;span style="color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px;"&gt;pip install autopep8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;If You have a file foo.py as show above, You can run&lt;br&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;div dir="ltr" trbidi="on"&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;$ autopep8 --in-place --aggressive --aggressive foo.py&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;which neatly formats the file like this&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-wMseYjAAsp0/VWC-mHqkLkI/AAAAAAAANvY/hwOow-QGsxc/s1600/auto-pep8-2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="561" src="http://1.bp.blogspot.com/-wMseYjAAsp0/VWC-mHqkLkI/AAAAAAAANvY/hwOow-QGsxc/s640/auto-pep8-2.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Emacs Integration:&lt;/h3&gt;As emacs is extremely configurable editor, with just couple of lines of lisp, we can integrate autopep8 to emacs. Just find where autopep8 is installed; write a function which runs autopep8 on current buffer; bind a key to that function; set a hook, so that when ever You save a file, it will be automatically run the function.&lt;br&gt;&lt;br&gt;&lt;code data-gist-file="autopep8.el" data-gist-hide-footer="true" data-gist-hide-line-numbers="true" data-gist-id="0e8c8351799cdd7254d7"&gt;&lt;/code&gt;This works reasonably well. But I do recommend using &lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;Elpy&lt;/a&gt; for Python developemnt in emacs. I have just sent a &lt;a href="https://github.com/jorgenschaefer/elpy/pull/571" target="_blank"&gt;pull request to integrate&lt;/a&gt; autopep8 with elpy.&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;Formatting:&lt;/h3&gt;&lt;div&gt;PEP8 formatters like autopep8, pep8ify will remove only lint errors. But they can't beautify code. &lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;little = more[3:   5]&lt;br&gt;&lt;br&gt;x = {'a': 37, 'b': 42,&lt;br&gt;     'c': 927}&lt;br&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;Above code remains same after pep8ifying also. But the code doesn't look good yet. You can use formatters like &lt;a href="https://pypi.python.org/pypi/yapf" target="_blank"&gt;yapf&lt;/a&gt;, which will format the code even if the code is PEP8 compliant. &lt;/div&gt;&lt;div&gt;Above code will be formatted to &lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;little = more[3:5]&lt;br&gt;&lt;br&gt;x = {'a': 37, 'b': 42, 'c': 927}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;Some times this even destroys Your manual formatting. For example &lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;BAZ = {&lt;br&gt;    [1, 2, 3, 4],&lt;br&gt;    [5, 6, 7, 8],&lt;br&gt;    [9, 10, 11, 12]&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;will be converted to &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;BAZ = {[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;But You can tell it to ignore some parts.&lt;/div&gt;&lt;div&gt;&lt;pre style="border-radius: 3px; border: 1px solid rgb(170, 204, 153); color: #333333; font-family: monospace, sans-serif; font-size: 15.4399995803833px; line-height: 18.5279998779297px; overflow-x: auto; overflow-y: hidden; padding: 5px;"&gt;BAZ = {&lt;br&gt;    [1, 2, 3, 4],&lt;br&gt;    [5, 6, 7, 8],&lt;br&gt;    [9, 10, 11, 12]&lt;br&gt;}  # yapf: disable&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Beyond PEP8:&lt;/h3&gt;As we have learnt to auto PEP8 code, it is the time to look beyond PEP8. There is a good talk by Raymond Hettinger on that - &lt;a href="https://www.youtube.com/watch?v=wf-BqAjZb8M" target="_blank"&gt;Beyond PEP8&lt;/a&gt;, Best practices for beautiful intelligible code.&lt;br&gt;&lt;br&gt;Let Machines take care of PEP8 &amp;amp; Let Humans look Beyond PEP8.&lt;br&gt;&lt;br&gt;&lt;h3 style="text-align: left;"&gt;References:&lt;/h3&gt;[1] &lt;a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/04/06/2036150.aspx" target="_blank"&gt;Code is read much more often than it is written, so plan accordingly&lt;/a&gt;.&lt;br&gt;&lt;a href="https://www.python.org/dev/peps/pep-0008/" target="_blank"&gt;Python - PEP8 style guide&lt;/a&gt;.&lt;br&gt;&lt;a href="https://pypi.python.org/pypi/autopep8/" target="_blank"&gt;Autopep8 - formats Python code to conform to the PEP 8.&lt;/a&gt;&lt;br&gt;&lt;a href="https://pypi.python.org/pypi/pep8ify" target="_blank"&gt;PEP8ify - modifies python source code to conform to PEP8.&lt;/a&gt;&lt;br&gt;&lt;div&gt;&lt;a href="https://pypi.python.org/pypi/yapf" target="_blank"&gt;yapf - A formatter for Python files.&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://www.youtube.com/watch?v=wf-BqAjZb8M" target="_blank"&gt;Beyond PEP8 - Best practices for beautiful intelligible code.&lt;/a&gt;&lt;/div&gt;&lt;a href="https://github.com/jorgenschaefer/elpy" target="_blank"&gt;Elpy, the Emacs Lisp Python Environment&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;!&lt;/span&gt;&lt;br&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/emacs" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Emacs&lt;/a&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;!&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>pep8</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2015/05/automatically-pep8-your-python-code/</guid><pubDate>Sat, 23 May 2015 19:14:00 GMT</pubDate></item><item><title>Whats So Good About Django Traceback?</title><link>http://www.avilpage.com/2015/05/whats-so-good-about-django-traceback/</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;When You are working on django project, if You make any errors, it will throw a simple traceback on the terminal where you started server.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-Qomg2ms9Ij4/VV3m-iGH_uI/AAAAAAAANvA/LT3QzrnMOsg/s1600/django-traceback7.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="171" src="http://3.bp.blogspot.com/-Qomg2ms9Ij4/VV3m-iGH_uI/AAAAAAAANvA/LT3QzrnMOsg/s400/django-traceback7.png" width="400"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br&gt;&lt;/div&gt;If you go to browser, you will find a rich traceback like this.&lt;br&gt;&lt;div style="text-align: center;"&gt;&lt;/div&gt;&lt;div style="-webkit-text-stroke-width: 0px; color: black; font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: center; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px;"&gt;&lt;/div&gt;&lt;br&gt;&lt;div class="separator" style="-webkit-text-stroke-width: 0px; clear: both; color: black; font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; margin: 0px; orphans: auto; text-align: center; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px;"&gt;&lt;a href="http://2.bp.blogspot.com/-tvh4xHpe3vg/VV3llj9pRjI/AAAAAAAANuc/u4FuL0oQ57A/s1600/django-traceback.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="449" src="http://2.bp.blogspot.com/-tvh4xHpe3vg/VV3llj9pRjI/AAAAAAAANuc/u4FuL0oQ57A/s640/django-traceback.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;Most Python developers, discover django-extensions within a few weeks after they start working with Django and start using Werkzeug debugger. Werkzeug has lot of advantages when compared to default Django traceback. I also used it for a while. For the same error Werkzeug throws traceback like this.&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-GYBZegc7018/VV3lluQru-I/AAAAAAAANuY/rbH5oVZHT2U/s1600/django-traceback4.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="420" src="http://3.bp.blogspot.com/-GYBZegc7018/VV3lluQru-I/AAAAAAAANuY/rbH5oVZHT2U/s640/django-traceback4.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;One thing I really like about Django traceback is, the distinction between user code and the internal Django code. Most of the time, developers were looking for the bug in their code instead of looking for a bug in Django. So, Django makes it easier to skip over the frames that doesn't matter and focus on the one which matters most.&lt;br&gt;&lt;br&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-ZzMWZjWzo44/VV3moiCWWKI/AAAAAAAANu4/VXHrw1NpA8o/s1600/django-traceback6.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="386" src="http://1.bp.blogspot.com/-ZzMWZjWzo44/VV3moiCWWKI/AAAAAAAANu4/VXHrw1NpA8o/s640/django-traceback6.png" width="640"&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;It also shows local vars in that frame. With this You instantly look at the variables to find out why error has occured(see this &lt;a href="https://code.djangoproject.com/ticket/11834" target="_blank"&gt;Django Ticket #11834:&lt;/a&gt; for more discussion about this).&lt;br&gt;&lt;br&gt;These two features make it very easy to track down most common errors.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;Read more &lt;/span&gt;&lt;a href="http://www.avilpage.com/search/label/python" style="background-color: white; color: #5421bb; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px; text-decoration: none;"&gt;articles about Python&lt;/a&gt;&lt;span style="background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16.7999992370605px; line-height: 20.1599979400635px;"&gt;!&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;</description><category>django</category><category>python</category><category>tech</category><guid>http://www.avilpage.com/2015/05/whats-so-good-about-django-traceback/</guid><pubDate>Thu, 21 May 2015 14:59:00 GMT</pubDate></item></channel></rss>