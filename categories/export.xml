<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Avil Page (export)</title><link>http://www.avilpage.com</link><description></description><atom:link rel="self" href="http://www.avilpage.com/categories/export.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 13 Nov 2016 14:08:17 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Importing &amp; Exporting JSON Data To mongoDB!</title><link>http://www.avilpage.com/2014/12/importing-exporting-json-data-to-mongodb.html</link><dc:creator>Chillar Anand</dc:creator><description>&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;code&gt;mongoimport&lt;/code&gt; imports JSON, CSV or TSV data to mongoDB. If You are importing JSON data from a file to db, the file should have only one document per line and there shouldn't be any delimiters at the end of file. If You have a file &lt;code&gt;sample.json&lt;/code&gt; like this&lt;br&gt;&lt;pre&gt;{"num":1,"status":"ok"}&lt;br&gt;{"num":2,"status":"ok"}&lt;br&gt;{"num":3,"status":"ok"}&lt;br&gt;{"num":4,"status":"ok"}&lt;/pre&gt;You can directly import it into db using&lt;br&gt;&lt;pre&gt;mongoimport --db &amp;lt;db&amp;gt; --collections &amp;lt;collection&amp;gt; --file sample.json&lt;/pre&gt;This is straight forward and works well. But some third party services provide data in the form of JSON array like this&lt;br&gt;&lt;pre&gt;[&lt;br&gt;    {"num":1,"status":"ok"},&lt;br&gt;    {"num":2,"status":"ok"},&lt;br&gt;    {"num":3,"status":"ok"},&lt;br&gt;    {"num":4,"status":"ok"},&lt;br&gt;]&lt;br&gt;&lt;/pre&gt;If You try to import it, it throws FailedToParse error. For this, You need to pass additional param jsonArray.&lt;br&gt;&lt;pre&gt;mongoimport --db &amp;lt;db&amp;gt; --collections &amp;lt;collection&amp;gt; --file sample.json --jsonArray&lt;/pre&gt;If You want to export Your collection as a json dump, You can use mongoexport command&lt;br&gt;&lt;pre&gt;mongoexport --db &amp;lt;db&amp;gt; --collections &amp;lt;collection&amp;gt; --out sample.json&lt;/pre&gt;This exports data into JSON format with one document in a row.&lt;br&gt;&lt;br&gt;If You pass jsonArray as an optional parameter, it will export the collection as a jsonArray&lt;br&gt;&lt;pre&gt;mongoexport --db &amp;lt;db&amp;gt; --collections &amp;lt;collection&amp;gt; --out sample.json --jsonArray&lt;/pre&gt;If You are lazy to type, You can use  &lt;br&gt;&lt;pre&gt;mongoexport --d &amp;lt;db&amp;gt; --c &amp;lt;collection&amp;gt; --o sample.json --jsonArray&lt;/pre&gt;&lt;br&gt;References:: mongoDB docs -Â &lt;a href="http://docs.mongodb.org/manual/reference/program/mongoimport/" target="_blank"&gt;mongoimport&lt;/a&gt;, &lt;a href="http://docs.mongodb.org/manual/reference/program/mongoexport/#bin.mongoexport" target="_blank"&gt;mongoexport&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;style&gt;code {  font-size: 1em; font-family: 'Menlo',Courier,monotype; padding: 2px 4px; color: #373737; background-color: #f7f7f9; border: 1px solid #e1e1e8; overflow: hidden; }  pre { border-bottom-left-radius: 3px;  border-bottom-right-radius: 3px;  border-top-left-radius: 3px;  border-top-right-radius: 3px;  border: 1px solid rgb(170, 204, 153);  font-family: monospace, sans-serif;  font-size: 15px;  line-height: 18.5279998779297px;  overflow-x: auto; overflow-y: hidden;  padding: 5px; }  } &lt;/style&gt;&lt;/div&gt;</description><category>db</category><category>export</category><category>import</category><category>json</category><category>mongodb</category><category>tech</category><guid>http://www.avilpage.com/2014/12/importing-exporting-json-data-to-mongodb.html</guid><pubDate>Sun, 28 Dec 2014 13:33:00 GMT</pubDate></item></channel></rss>